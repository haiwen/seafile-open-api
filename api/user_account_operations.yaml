openapi: 3.0.3
info:
  title: Account Operations - User
  description: |-
    The official SeaTable API Reference (OpenAPI 3.0). - Part 'User Account Operations'.
  version: 1.0.1
servers:
  - url: https://{server}
    variables: 
      server:
        default: cloud.seafile.com

x-readme:
  explorer-enabled: true
  metrics-enabled: false
  proxy-enabled: false

components:
  securitySchemes:
    AccountTokenAuth:
      type: http
      scheme: bearer
      description: This is the [Account-Token](/reference/authentication).

  # Reusable path, query, header and cookie parameters
  parameters:
    # Query parameters
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
      example: 1

    per_page:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
      example: 25

    avatar_size:
      name: avatar_size
      in: query
      required: false
      schema:
        type: integer
      example: 72

    dir_path:
      name: path
      in: query
      description: 'Path to the dir'
      required: false
      schema:
        type: string

    directory_path:
      name: p
      in: query
      description: 'Path to the dir, should not be /'
      required: true
      schema:
        type: string

    parent_dir:
      name: parent_dir
      in: query
      description: 'Path to the parent_dir'
      required: true
      schema:
        type: string

    dirents:
      name: dirents
      in: query
      description: 'name of the dir'
      required: true
      schema:
        type: string

    token:
      name: token
      in: query
      description: 'The token returned from Get Task Token request'
      required: true
      schema:
        type: string
      example: b2272645-35ee-44ce-8f68-07c022107015

    invitation_token:
      name: invitation_token
      in: path
      required: true
      schema:
        type: string
      example: b2272645-35ee-44ce-8f68-07c022107015

    object_id:
      name: oid
      in: query
      description: 'The object id of the directory. The object id is the checksum of the directory contents.'
      required: false
      schema:
        type: string

    type:
      name: t
      in: query
      description: If set t argument as f, will only return file entries, and d for only dir entries.
      required: false
      schema:
        type: string
      example: 'f'

    recursive:
      name: recursive
      in: query
      required: false
      schema:
        type: string
        enum:
          - '0'
          - '1'
        default: '0'

    library_type:
      name: type
      in: query
      required: false
      schema:
        enum:
          - mine
          - shared
          - group
          - org
        default: mine

    nameContains:
      name: nameContains
      in: query
      required: false
      description: The name of the library 
      schema:
          type: string

    op:
      name: op
      in: query
      required: false
      description: Modify the name passing parameter 
      schema:
        type: string
        enum: [rename]
        default: rename
    
    path_in_query:
      name: path
      in: query
      required: false
      schema:
        type: string
        default: '/'

    path:
      name: path
      in: path
      description: 'path of file/folder.'
      required: true
      schema:
        type: string

    show_days:
      name: show_days
      in: query
      required: false
      schema:
        type: string
        default: 100

    scan_stat:
      name: scan_stat
      in: query
      description: "An opaque status returned by the last call. In the first call, None must be passed. The last entry of the result list contains a 'scan_stat' attribute. In the next call, pass in the returned 'scan_stat'."
      required: false
      schema:
        type: string
        
    upload_ret-json:
      name: ret-json
      in: query
      description:  returns a json array including file info if set to 1. If this parameter is not set, the file ids will be returned in a tab-separated string. New apps should set ret-json to 1.
      required: false
      schema:
        type: string
    
    upload_need_idx_progres:
      name: need_idx_progres
      in: query
      required: false
      description: Set to true  to ask the server to index file content asynchronously after upload is finished. So that the client doesn't have to wait until the file indexing is completed, which can take some time. The request returns a task_id to check file indexing progress.
      schema:
        type: string

    file_name:
      name: file_name
      in: query
      required: true
      description: 'filename'
      schema:
        type: string

    file_path:
      name: file_path
      in: query
      required: true
      description: 'The path to the file in the library'
      schema:
        type: string

    comment_p:
      name: p
      in: query
      required: true
      description: 'The path to the file in the library'
      schema: 
        type: string

    commit_id_in_query:
      name: commit_id
      in: query
      required: false
      description: commit id used for get more file history. If not passed, Seafile will use library's head commit id as its default value and return the latest history.
      schema: 
        type: string
    
    history_path:
      name: path
      in: query
      required: true
      description: file path
      schema:
        type: string
  
    commit_id_query:
      name: commit_id
      in: query
      required: true
      description: The unique identifier of a commit
      schema:
        type: string
    q:
      name: q
      in: query
      required: true
      description: keyword for searching.
      schema: 
        type: string

    search_repo:  
      name: search_repo
      in: query
      required: false
      description: all, mine, shared, group, public or a repo_id, (all for searching in all libraries, etc.), optional. For searching in shared libraries, you can also pass shared_from or not_shared_from parameter beside shared to filter shared libraries.
      schema: 
        type: string
        required:
          - "all"
          - "mine"
          - "shared"
          - "group"
          - "public"
          - "repo_id"
        default: all
    
    search_path:
      name: search_path
      in: query
      required: false
      description: path of specifiy library.(This option works only when search_repo is a single repo_id.)
      schema: 
        type: string
    
    search_ftypes:
      name: search_ftypes
      in: query
      required: false
      description: all or custom, (all for searching all file types, custom for only searching the specific file types you defined in ftype and input_fexts).
      schema: 
        type: string
        default: all
    
    ftype:
      name: ftype
      in: query
      required: false
      description: must be in (Text, Document, Image, Video, Audio, PDF, Markdown).
      schema:
        type: string
        
    with_permission:
      name: with_permission
      in: query
      required: false
      description: true or false. Whether return permission info of the file or not, default is false.
      schema:
        type: boolean

    task_id:
      name: task_id
      in: query
      required: true
      description: 'Asynchronous operation id' 
      schema: 
        type: string
    
    zip_token:
      name: token
      in: query
      description: ""
      required: true
      schema: 
        type: string

    # Path parameters
    user:
      name: user
      in: path
      required: true
      schema:
        type: string
      example: user@example.com

    size:
      name: size
      in: path
      required: true
      schema:
        type: integer
      example: 64

    group_id:
      name: group_id
      in: path
      required: true
      schema:
        type: integer

    email:
      name: email
      in: path
      required: true
      schema:
        type: string

    repo_id:
      name: repo_id
      in: path
      description: The unique identifier of a library
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
    
    p:
      name: p
      in: query
      description: 'The path to the file in the library'
      required: true
      schema:
        type: string

    reuse:
      name: reuse
      in: query
      description: Set reuse to 1 if you want the generated download link can be accessed more than once in one hour.
      required: false
      schema:
        type: string
    
    repo_id_query:
      name: repo_id
      in: query
      description: 'The unique identifier of a library'
      required: true
      schema:
        type: string
    
    is_dir:
      name: is_dir
      in: path
      description: 'true or false'
      required: true
      schema: 
        type: string
      
    comment_id:
      name: comment_id
      in: path
      required: true
      description: The unique identifier of a comment
      schema:
        type: integer

    repo_tag_id:
      name: repo_tag_id
      in: path
      required: true
      description: The unique identifier of a tag
      schema:
        type: integer

    file_tag_id:
      name: file_tag_id
      in: path
      required: true
      schema:
        type: integer

    upload_token:
      name: upload_token
      in: path
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

    commit_id:
      name: commit_id
      in: path
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
    


    
  schemas:
    # request body
    avatar:
      type: string
      description: >-
        Upload an image file. Authorized extensions are : .jpg, .png, .jpeg, .gif. Accepted max size is 1.0 MB.
      format: binary

    avatar_size:
      type: string

    repo_name:
      description: 'Name of the library'
      type: string
      example: 'test'

    permission:
      type: string
      example: r

    password:
      type: string

    username:
      type: string
      example: 1@1.com

    username_list:
      type: array
      items:
        type: string
      example: [1@1.com, 2@2.com]

    group_id:
      type: integer
      example: 1

    group_id_list:
      type: array
      items:
        type: integer
      example: [1, 2]

    dir_path:
      description: 'Path to the dir'
      type: string
      example: '/'

    platform:
      type: string
      example: linux

    device_id:
      type: string
      example: be10980211752515053bf9036a13139375de0cc8

    remote_wipe:
      type: string
      default: ''

    operation:
      type: string
      enum:
        - mkdir
        - rename
      example: mkdir

    create_parents:
      type: string
      description: whether to create multi-level directory, default false.
      default: 'false'

    newname:
      type: string
      description: the new name of the directory / file.

    commit_id:
      type: string
      example: b1a33768517f65ac7d618ff078dd27855374c7e0

    src_repo_id:
      type: string
      pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

    src_parent_dir:
      type: string
      example: '/src'

    src_dirent_name:
      type: string
      example: folder

    src_dirents:
      type: array
      items:
        type: string
        example: ["1.md","2.md"]

    dst_repo_id:
      type: string
      pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

    dst_parent_dir:
      type: string
      example: '/dst'

    create_directory:
      title: 'Create New Directory'
      type: object
      properties:
        operation:
          type: string
          enum: [mkdir]
        create_parents:
          $ref: '#/components/schemas/create_parents'

    rename_directory:
      title: 'Rename Directory'
      type: object
      properties:
        operation:
          type: string
          enum: [rename]
        newname:
          $ref: '#/components/schemas/newname'

    
    file_operation_create:
      title: 'Create file'
      type: object
      properties:
        operation:
          type: string
          enum: [create]
        

    file_operation_move:
      title: 'Move file'
      type: object
      properties:
        operation:
          type: string
          enum: [move]
        dst_repo:
          $ref: '#/components/schemas/dst_repo'
        dst_dir:
          $ref: '#/components/schemas/dst_dir'

    file_operation_copy:
      title: 'Copy file'
      type: object
      properties:
        operation:
          type: string
          enum: [copy]
        dst_repo:
          $ref: '#/components/schemas/dst_repo'
        dst_dir:
          $ref: '#/components/schemas/dst_dir'
    
    file_operation_rename:
      title: 'Rename file'
      type: object
      properties:
        operation:
          type: string
          enum: [rename]
        newname:
          $ref: '#/components/schemas/new_name'

    file_operation:
      oneOf:
        - $ref: '#/components/schemas/file_operation_create'
        - $ref: '#/components/schemas/file_operation_copy'
        - $ref: '#/components/schemas/file_operation_move'
        - $ref: '#/components/schemas/file_operation_rename'
      
    file_lock_operation:
      title: 'operation'
      type: string
      enum:
        - lock
        - unlock
      example: "lock"

    new_name:
      title: 'newname'
      type: string
      example: 'test.md'

    dst_repo:
      title: dst_repo
      type: string
      example: affc837f-7fdd-4e91-b88a-32caf99897f2
    
    dst_dir: 
      title: dst_dir
      type: string
      example: /123
    
    library_passwd:
      type: string
      example: test
      description: needed by encrypted library

    storage_id:
      type: string
      description: when multiple storage backends enabled, use this identifier for storage object.

    op_rename:
      title: 'Rename library'
      type: object
      properties:
        repo_name:
          type: string
          
    op_password:
      title: 'Decrypt library'
      type: object
      properties:
        password:
          type: string

    library_operation:
      oneOf:
        - $ref: '#/components/schemas/op_rename'
        - $ref: '#/components/schemas/op_password'

    repo_owner:
      type: string
      description: The format should be "department_id@seafile_group"
      example: 62e7d27c7d4f42d8afcc35e2002b812c@auth.local

    keep_days:
      type: string
      description: -1 for keep full history; 0 for do not keep history; positive number for keep a period of limit days.
      example:  8

    upload_file:
      type: object
      properties:
        file:
          type: string
          description: this field contains the contents to be uploaded.
        parent_dir:
          type: string
          description: path in your Seafile repo that you want to upload local file to. This path must be the same as the 'p' parameter you specified when getting the upload link.
        relative_path: 
          type: string
          description: sub-folder of "parent_dir", if this sub-folder does not exist, Seafile will create it recursively. When you upload a folder, you should set this parameter to the uploaded folder's name.
        replace:
          type: string
          description: whether to overwrite file when it already exists. 1 for replace, 0 for not replace. If existing file is not replaced, the uploaded file will be renamed to the form "filename (1).txt".

    file:
      type: object
      properties:
        file:
          type: string
          description: this field contains the contents to be uploaded.
        target_file:
          type: string
          description: The absolute path inside the library of the file being updated.
paths:
  # Account
  /api2/account/info/:
    get:
      tags:
        - Account
      summary: Get account info
      description: Get the detailed account information with the user's Account Token.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                login_id: ''
                is_staff: false
                name: foo
                email_notification_interval: 0
                institution: ''
                department: ''
                avatar_url: http://127.0.0.1:8000/media/avatars/default.png
                contact_email: test@example.com
                space_usage: 73.40217%
                usage: 22020651,
                total: 30000000,
                email: 'foo@foo.com'

  /api2/client-login/:
    get:
      tags:
        - Account
      summary: Get client login url
      description: You can use this API to get a URL to login into the Web interface. The usage case is to provide the feature of 'Visit web site' in the clients.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                'https://cloud.seafile.com/client-login/?token=000f1f83d612836c65fed087fb9c4ca40852d0f9'

  # Activities
  /apiv2.1/activities/:
    get:
      tags:
        - Activities
      summary: Get file activities
      description: Get File Activities
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/avatar_size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                events:
                  - commit_id: 56ad4dfa70f79d2c7a8a6e032acda65d824e7946
                    obj_type: file
                    repo_id: 231afed9-9e6c-4314-9247-dfc3ee0ac734
                    name: temp.md
                    author_email: a@example.com
                    author_contact_email: a@example.com
                    time: 2023-05-14T09:42:48+00:00
                    author_name: aaa
                    avatar_url: http://127.0.0.1:8000/media/avatars/d/1/0ca8d11301c2f4993ac2279ce4b930/resized/72/03e77af8819c66f25260297dd5e97dc7.png
                    op_type: edit
                    path: /temp.md
                    repo_name: documents

  /api/v2.1/user-avatar/:
    post:
      tags:
        - Avatars
      summary: Upload/Update user avatar
      description: Upload an image to make it your current avatar. After successful uploading/updating your avatar, the file will be renamed and converted to .png. The URL of your new avatar is returned in the response.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/avatar'
                avatar_size:
                  $ref: '#/components/schemas/avatar_size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                avatar_url: >-
                  https://cloud.seafile.com/media/avatars/2/4/fa66e6b3a50e2707997ec5eed3eda0/resized/64/a92f89f3e23c7fe9cc708454cdd010df_Y7zJE8v.png

  /api2/avatars/user/{user}/resized/{size}/:
    get:
      tags:
        - Avatars      
      summary: Get user avatar
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/user'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                url: http://127.0.0.1:8000/media/avatars/default.png
                is_default: true
                mtime: 0

  /api/v2.1/groups/{group_id}/group-owned-libraries/:
    post:
      tags:
        - Department Libraries
      summary: Add group owned library
      description: Add Group Owned Library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                repo_name:
                  $ref: '#/components/schemas/repo_name'
                permission:
                  $ref: '#/components/schemas/permission'
                password:
                  $ref: '#/components/schemas/password'
              required:
                - repo_name
                - permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                repo_id: 9bc59af9-265e-4110-a0e2-619450a5cb35
                permission: r
                encrypted: false
                owner_email: 53@seafile_group
                mtime: 2018-04-23T17:25:37+08:00
                repo_name: group-owned-repo-4
                size: 0

  /api/v2.1/groups/{group_id}/group-owned-libraries/{repo_id}/:
    put:
      tags:
        - Department Libraries
      summary: Rename a group owned library
      description: Rename a Group Owned Library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/repo_name'
              required:
                - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                id: 9bc59af9-265e-4110-a0e2-619450a5cb35
                name: test
                mtime: 2018-04-23T17:25:37+08:00
                size: 0
                encrypted: false
                owner: 3@seafile_group
                group_name: test-group

    delete:
      tags:
        - Department Libraries
      summary: Delete group owned library
      description: Delete Group Owned Library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/v2.1/group-owned-libraries/{repo_id}/user-share/:
    get:
      tags:
        - Department Libraries
      summary: Get group owned library user share info
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/dir_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  example:
                    permission: rw
                    user_name: '1'
                    user_email: 1@1.com
                    user_contact_email: 1@1.com

    post:
      tags:
        - Department Libraries
      summary: Share group owned library to user
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                username:
                  $ref: '#/components/schemas/username_list'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      type: object
                  success:
                    type: array
                    items:
                      type: object
              example:
                failed: [
                  {
                    email: 2@2.com,
                    error_msg: User 2@2.com not found.
                  }
                ]
                success: [
                  {
                    permission: r,
                    user_name: '1',
                    user_email: 1@1.com,
                    user_contact_email: 1@1.com
                  }
                ]

    put:
      tags:
        - Department Libraries
      summary: Modify group owned library user share permission
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                username:
                  $ref: '#/components/schemas/username'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

    delete:
      tags:
        - Department Libraries
      summary: Delete group owned library user share
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  $ref: '#/components/schemas/username'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/v2.1/group-owned-libraries/{repo_id}/group-share/:
    get:
      tags:
        - Department Libraries
      summary: Get group owned library group share info
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/dir_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  example:
                    permission: r
                    group_id: 1
                    group_name: test-group

    post:
      tags:
        - Department Libraries
      summary: Share group owned library to group
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                group_id:
                  $ref: '#/components/schemas/group_id_list'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - group_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      type: object
                  success:
                    type: array
                    items:
                      type: object
              example:
                failed: [
                  {
                    error_msg: Group 2 not found.
                  }
                ]
                success: [
                  {
                    permission: r,
                    group_id: 1,
                    group_name: test-group
                  }
                ]

    put:
      tags:
        - Department Libraries
      summary: Modify group owned library group share permission
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                group_id:
                  $ref: '#/components/schemas/group_id'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - group_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

    delete:
      tags:
        - Department Libraries
      summary: Delete group owned library group share
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  $ref: '#/components/schemas/group_id'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - group_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api2/devices/:
    get:
      tags:
        - Devices
      summary: List devices
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  example:
                    last_accessed: 2016-03-15T10:28:48+08:00
                    is_desktop_client: true
                    device_name: laptop
                    platform_version: ''
                    platform: linux
                    user: test@example.com
                    key: 99abe1a7cc7d614db0bfa19db81e42ef675abe4f
                    client_version: 5.0.0
                    last_login_ip: 192.168.1.16
                    device_id: be10980211752515053bf9036a13139375de0cc8

    delete:
      tags:
        - Devices
      summary: Unlink device
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                platform:
                  $ref: '#/components/schemas/platform'
                device_id:
                  $ref: '#/components/schemas/device_id'
                remote_wipe:
                  $ref: '#/components/schemas/remote_wipe'
              required:
                - platform
                - device_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api2/repos/{repo_id}/dir/:
    get:
      tags:
        - Directories
      summary: List items in directory
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/dir_path'
        - $ref: '#/components/parameters/object_id'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/recursive'
      responses:
        '200':
          description: If oid is the same as the current oid of the directory, returns 'uptodate' , else return a list of object.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  example:
                    id: '0000000000000000000000000000000000000000'
                    type: file
                    name: test.txt
                    size: 0

    post:
      tags:
        - Directories
      summary: Create new or rename directory
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/directory_path'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/create_directory'
                - $ref: '#/components/schemas/rename_directory'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
                example:
                  'success'

    delete:
      tags:
        - Directories
      summary: Delete directory
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/directory_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example:
                 'success'

  /api/v2.1/repos/{repo_id}/dir/detail/:
    get:
      tags:
        - Directories
      summary: Get directory detail
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/dir_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  repo_id: d4f596ed-09ea-4ac6-8d59-12acbd089097
                  name: Develop
                  mtime: 2018-01-05T17:45:41+08:00
                  path: /Develop/

  /api2/repos/{repo_id}/dir/revert/:
    put:
      tags:
        - Directories
      summary: Revert directory to a history status
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                p:
                  $ref: '#/components/schemas/dir_path'
                commit_id:
                  $ref: '#/components/schemas/commit_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/v2.1/repos/{repo_id}/zip-task/:
    get:
      tags:
        - Directories
      summary: Download directory
      description: Get Task Token
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/parent_dir'
        - $ref: '#/components/parameters/dirents'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  zip_token:
                    type: string
                example:
                  zip_token: b2272645-35ee-44ce-8f68-07c022107015

    post:
      tags:
        - Directories
      summary: Download directory
      description: Download Multiple Items, Get Task Token
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           parent_dir:
      #             $ref: '#/components/schemas/parent_dir'
      #           dirents:
      #             $ref: '#/components/schemas/dirents'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  zip_token:
                    type: string
                example:
                  zip_token: b2272645-35ee-44ce-8f68-07c022107015

  /api/v2.1/query-zip-progress/:
    get:
      tags:
        - Directories
      summary: Download directory
      description: Query Task Progress
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  zipped:
                    type: integer
                  total:
                    type: integer
                example:
                  zipped: 2
                  total: 2

  /api/v2.1/move-folder-merge/:
    post:
      tags:
        - Directories
      summary: Move directory with items merged
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirent_name:
                  $ref: '#/components/schemas/src_dirent_name'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirent_name
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  # TODO: Supplementary parameters, requestBody, responses, etc.
  /api2/repos/{repo_id}/file/comments/:
    get:
      tags:
        - File Comments
      summary: List file comments
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/file_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "comments": [
                    {
                        "comment": "word",
                        "repo_id": "4674c2bb-3702-4dd0-b768-8952db27ac87",
                        "item_name": "doc",
                        "created_at": "2017-10-11T02:49:42+00:00",
                        "parent_path": "/doc",
                        "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                        "user_name": "admin",
                        "id": 7,
                        "user_email": "admin@admin.com",
                        "user_contact_email": "admin@admin.com"
                    },
                    {
                        "comment": "help",
                        "repo_id": "4674c2bb-3702-4dd0-b768-8952db27ac87",
                        "item_name": "doc",
                        "created_at": "2017-10-11T02:49:44+00:00",
                        "parent_path": "/doc",
                        "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                        "user_name": "admin",
                        "id": 8,
                        "user_email": "admin@admin.com",
                        "user_contact_email": "admin@admin.com"
                    },
                    {
                        "comment": "test",
                        "repo_id": "4674c2bb-3702-4dd0-b768-8952db27ac87",
                        "item_name": "doc",
                        "created_at": "2017-10-11T03:32:37+00:00",
                        "parent_path": "/doc",
                        "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                        "user_name": "admin",
                        "id": 10,
                        "user_email": "admin@admin.com",
                        "user_contact_email": "admin@admin.com"
                    }
                ]
                   } 


    post:
      tags:
        - File Comments
      summary: Submit a file comment
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_p'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: hello          
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "id": 285,
                "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                "parent_path": "/",
                "item_name": "test",
                "comment": "hello",
                "created_at": "2024-03-07T10:09:12+08:00",
                "updated_at": "2024-03-07T10:09:12+08:00",
                "resolved": false,
                "detail": "",
                "replies": [],
                "user_name": "冲鸭丶",
                "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                "user_contact_email": "1942999482@qq.com",
                "avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/80/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png"
                    }

  /api2/repos/{repo_id}/file/comments/{comment_id}/:
    get:
      tags:
        - File Comments
      summary: Get a file comment
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                  "id": 285,
                  "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                  "parent_path": "/",
                  "item_name": "test",
                  "comment": "hello",
                  "created_at": "2024-03-07T10:09:12+08:00",
                  "updated_at": "2024-03-07T10:09:12+08:00",
                  "resolved": false,
                  "detail": "",
                  "replies": [],
                  "user_name": "冲鸭丶",
                  "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                  "user_contact_email": "1942999482@qq.com",
                  "avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/80/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png"
                      }

    put:
      tags:
        - File Comments
      summary: Update a file comment
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                detail:
                  type: string
                  example: abc
                resolved:
                  type: string
                  description: true or false must be a string
                  example: "true"
              required:
                - detail
                - resolved
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "id": 285,
                "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                "parent_path": "/",
                "item_name": "test",
                "comment": "hello",
                "created_at": "2024-03-07T10:09:12+08:00",
                "updated_at": "2024-03-07T10:09:12+08:00",
                "resolved": false,
                "detail": "abc",
                "replies": [],
                "user_name": "test",
                "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                "user_contact_email": "1942999482@qq.com",
                "avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/80/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png"
                      }
    delete:
      tags:
        - File Comments
      summary: Delete a file comment
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_id'
      responses:
        '200':
          description: OK

  /api2/repos/{repo_id}/file/comments/counts/:
    get:
      tags:
        - File Comments
      summary: Get number of comments
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: { "test": 2 }

  /api/v2.1/repos/{repo_id}/file/history/:
    get:
      tags:
        - File History
      summary: Get file history
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/history_path'
        - $ref: '#/components/parameters/commit_id_in_query'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_start_commit:
                    description: If value of next_start_commit is NOT false, it means that there are more file history, if you want to continue to get more file history, resend the request with commit_id parameter, and assign the value of next_start_commit in response to request's commit_id parameter.
                  rev_renamed_old_path:
                    description: If value of rev_renamed_old_path field in the last item of data in response is NOT null, it means that the last item is a file renamed/moved commit, if you want to get more file history before file was renamed/moved,  resend the request, and assign the value of rev_renamed_old_path in response to request's path parameter.
              example: {
                  "data": [
                      {
                          "creator_avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/32/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png",
                          "creator_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "creator_name": "冲鸭丶",
                          "creator_contact_email": "1942999482@qq.com",
                          "ctime": "2024-03-07T11:08:16+08:00",
                          "description": "Modified \"1.docx\"",
                          "commit_id": "3fce7037bd238aa619416b8f7e2d44f1102ad556",
                          "size": 25022,
                          "rev_file_id": "1067d1adbb93c196c4e83f47c672f2e8445d831c",
                          "rev_renamed_old_path": null,
                          "path": "/1.docx"
                      },
                      {
                          "creator_avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/32/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png",
                          "creator_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "creator_name": "冲鸭丶",
                          "creator_contact_email": "1942999482@qq.com",
                          "ctime": "2024-03-07T11:07:41+08:00",
                          "description": "Modified \"1.docx\"",
                          "commit_id": "2a3772010975725d2106f6dec17cd4c6f02ea353",
                          "size": 7839,
                          "rev_file_id": "0f3530f88bb1e398773edabe3297b448798f3e2e",
                          "rev_renamed_old_path": null,
                          "path": "/1.docx"
                      },
                      {
                          "creator_avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/32/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png",
                          "creator_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "creator_name": "冲鸭丶",
                          "creator_contact_email": "1942999482@qq.com",
                          "ctime": "2024-03-07T11:07:41+08:00",
                          "description": "Added \"1.docx\"",
                          "commit_id": "b5d0996980e9199184b92c74e858fa6cba9b6b02",
                          "size": 0,
                          "rev_file_id": "0000000000000000000000000000000000000000",
                          "rev_renamed_old_path": null,
                          "path": "/1.docx"
                      }
                  ],
                  "next_start_commit": false
                      }

  /api/v2.1/repos/{repo_id}/file/:
    post:
      tags:
        - File History
      summary: Create/Restore file from history
      description: Create/Restore file from history
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                operation:
                  type: string
                  example: revert
                  required:
                    - "revert"
                    - "create"
                commit_id:
                  type: string
                  example: 'b5d0996980e9199184b92c74e858fa6cba9b6b02'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                revert:
                  value: {
                    "success": true
                        }
                create:
                  value: {
                      "type": "file",
                      "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                      "parent_dir": "/",
                      "obj_name": "3.txt",
                      "obj_id": "0000000000000000000000000000000000000000",
                      "size": 0,
                      "mtime": "2024-03-07T11:36:35+08:00",
                      "is_locked": false,
                      "can_preview": true,
                      "can_edit": true
                         }
                  
  /api2/repos/{repo_id}/file/revision/:
    get:
      tags:
        - File History
      summary: Download file from a revision
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
        - $ref: '#/components/parameters/commit_id_query'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: "https://cloud.seafile.com/seafhttp/files/c7764c20-bcef-42fe-ab7c-e37a4f0bd246/1.docx"

  /api2/search/:
    get:
      tags:
        - File Search
      summary: Search files in libraries
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/search_repo'
        - $ref: '#/components/parameters/search_path'
        - $ref: '#/components/parameters/search_ftypes'
        - $ref: '#/components/parameters/ftype'
        - $ref: '#/components/parameters/with_permission'
      requestBody:
        required: false
        content:
          application/json:
            schema: 
              type: object
              properties:
                input_fexts:
                  type: string
                  description: file extensions manually specific.
                time_from:
                  type: integer
                  description: filter the result that the updated time greater than or equal to  this value. default unit is second.
                time_to:
                  type: integer
                  description: filter the result that the updated time less than or equal to  this value. default unit is second.
                size_from:
                  type: string
                  description: filter the result that the size greater than or equal to  this value. default unit is byte.
                size_to: 
                  type: string
                  description: filter the result that the size less than or equal to this value. default unit is byte.
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                  "has_more": false,
                  "total": 2,
                  "results": [
                      {
                          "repo_owner_name": "admin",
                          "repo_id": "2628a63b-cfad-41f5-a748-392ec9287686",
                          "name": "3a",
                          "repo_encrypted": False,
                          "repo_owner_contact_email": "admin@admin.com",
                          "repo_owner_email": "admin@admin.com",
                          "last_modified": 1520836447,
                          "content_highlight": "",
                          "fullpath": "/testtest/3a",
                          "repo_name": "dev",
                          "is_dir": false,
                          "size": 0
                      },
                      {
                          "repo_owner_name": "admin",
                          "repo_id": "2628a63b-cfad-41f5-a748-392ec9287686",
                          "name": "1a",
                          "repo_encrypted": False,
                          "repo_owner_contact_email": "admin@admin.com",
                          "repo_owner_email": "admin@admin.com",
                          "last_modified": 1520836462,
                          "content_highlight": "",
                          "fullpath": "/testtest/1a",
                          "repo_name": "dev",
                          "is_dir": false,
                          "size": 0
                      }
                  ]
                  }

                
  /api/v2.1/search-file/:
    get:
      tags:
        - File Search
      summary: Search files by name in library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id_query'
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "data": [
                    {
                        "path": "/t2",
                        "size": 0,
                        "mtime": "2024-03-07T13:37:40+08:00",
                        "type": "file"
                    }
                  ]
                      }

  /api/v2.1/repos/{repo_id}/repo-tags/:
    get:
      tags:
        - File Tags
      summary: List all tags of a library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                  "repo_tags": [
                      {
                          "repo_tag_id": 429,
                          "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                          "tag_name": "test",
                          "tag_color": "#FBD44A",
                          "files_count": 1
                      }
                              ]
                      }
    post:
      tags:
        - File Tags
      summary: Add a tag to a library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: test
                color:
                  type: string
                  example:  "#FBD44A"
              required:
                - name
                - color
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                    "repo_tag": {
                    "repo_tag_id": 430,
                    "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                    "tag_name": "t",
                    "tag_color": "#FFFFFF"
                            }
                      }
  /api/v2.1/repos/{repo_id}/repo-tags/{repo_tag_id}/:
    put:
      tags:
        - File Tags
      summary: Update a tag of a library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/repo_tag_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: t1
                color:
                  type: string
                  example: '#000000'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "repo_tag": {
                    "repo_tag_id": 430,
                    "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                    "tag_name": "t1",
                    "tag_color": "#000000"
                            }
                      }
    delete:
      tags:
        - File Tags
      summary: Delete a tag of a library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/repo_tag_id'
      responses:
        '200':
          description: OK

  /api/v2.1/repos/{repo_id}/file-tags/:
    get:
      tags:
        - File Tags
      summary: List all tags of a file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/file_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                  "file_tags": [
                      {
                          "tag_color": "#FFD43B",
                          "tag_name": "new",
                          "repo_tag_id": 1,
                          "file_tag_id": 1
                      },
                      {
                          "tag_color": "#FFA8A8",
                          "tag_name": "deprecated",
                          "repo_tag_id": 2,
                          "file_tag_id": 4
                      }
                                ]
                     }

    post:
      tags:
        - File Tags
      summary: Add a tag for a file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  example: /
                repo_tag_id:
                  type: string
                  example: '2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                      "file_tag": {
                          "file_tag_id": 957,
                          "repo_tag_id": 429
                                  }
                        }

  /api/v2.1/repos/{repo_id}/file-tags/{file_tag_id}/:
    delete:
      tags:
        - File Tags
      summary: Delete a tag from a file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/file_tag_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: { "success": "true" }
  /api/v2.1/repos/{repo_id}/tagged-files/{repo_tag_id}/:
    get:
      tags:
        - File Tags
      summary: List tagged files by tag
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/repo_tag_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "tagged_files": [
                    {
                        "file_tag_id": 953,
                        "parent_path": "/",
                        "filename": "test",
                        "size": 43,
                        "mtime": 1709710694,
                        "last_modified": "2024-03-06T15:38:14+08:00",
                        "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "modifier_contact_email": "1942999482@qq.com",
                        "modifier_name": "冲鸭丶"
                    },
                    {
                        "file_tag_id": 957,
                        "parent_path": "/",
                        "filename": "test.md",
                        "size": 0,
                        "mtime": 1709695513,
                        "last_modified": "2024-03-06T11:25:13+08:00",
                        "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "modifier_contact_email": "1942999482@qq.com",
                        "modifier_name": "冲鸭丶"
                    }
                ]
                }
          
  /api2/repos/{repo_id}/upload-link/:
    get:
      tags:
        - File Upload
      summary: Get upload link
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "https://cloud.seafile.com/seafhttp/upload-api/5b7d49bc-3756-4995-9e00-e5faddb3455b"
 
  /seafhttp/upload-aj/{upload_token}?ret-json=1:
    post:
      tags:
        - File Upload
      summary: Upload file
      description: Upload file
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/upload_file'
      parameters:
        - $ref: '#/components/parameters/upload_token'
        - $ref: '#/components/parameters/upload_ret-json'
        - $ref: '#/components/parameters/upload_need_idx_progres'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                No ref-json:
                  value: adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
                ref-json:
                  value: [
                    {
                        "name": "test.txt",
                        "id": "4ccd37916552e2943314027931edd0b45240be7c",
                        "size": 2987
                    }
                   ]
                Sample response with relative_path and ret-json:
                  value: [
                        {
                            "name": "test.txt",
                            "id": "4ccd37916552e2943314027931edd0b45240be7c",
                            "size": 2987
                        },
                        {
                            "name": "1.jpg",
                            "id": "12e07dd00c124fa7ea3b645ff9fe183f73eab2a1",
                            "size": 1699246
                        }
                    ]
                Sample response with ?need_idx_progress=true:
                  value: d319a3f4-40da-4d58-9d3f-07864061f633
                Sample response with ?task_id:
                  value: {
                    "indexed": 1244,
                    "total": 1244,
                    "status": 0,
                    "ret_json": "[{\"name\": \"seafile-license (1).txt\", \"id\": \"cb8d8eaa4e540d30550a26e399b1207ef798bc67\", \"size\": 1244}]"
                    }

  /api/v2.1/repos/{repo_id}/file-uploaded-bytes/:
    get:
      tags:
        - File Upload
      summary: Resumable upload file
      description: Check If Enable Resumable Upload, Get Bytes Already Uploaded
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/parent_dir'
        - $ref: '#/components/parameters/file_name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description:  'If the response has this header Accept-Ranges: bytes, means that Seafile server supports resumable upload file.'
              example: |
                      ....... 
                      < Accept-Ranges: bytes 
                      ........
                      {
                          "uploadedBytes": 0
                      * Closing connection 0
                      }

  /seafhttp/upload-api/{upload_token}/:
    post:
      tags:
        - File Upload
      summary: Upload file in chunks
      description: Upload File in Chunks
      security:
        - AccountTokenAuth: []
      
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/upload_file'
              # $ref: '#/components/schemas/file_name'
              # $ref: '#/components/schemas/parent_dir'
          
      parameters:
        - $ref: '#/components/parameters/upload_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                    "success": true
                       }

  /api2/repos/{repo_id}/update-link/:
    get:
      tags:
        - File Upload
      summary: Get update file
      description: Get Update Link
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: "https://cloud.seafile.com/seafhttp/update-api/aa610889-04ce-4d25-979e-6cb528775038"

  /seafhttp/update-api/{upload_token}/:
    post:
      tags:
        - File Upload
      summary: Update file
      description: Update file
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/file'
      parameters:
        - $ref: '#/components/parameters/upload_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: "adc83b19e793491b1c6ea0fd8b46cd9f32e592fc"

  /api2/repos/{repo_id}/file/:
    get:
      tags:
        - Files
      summary: Download file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
        - $ref: '#/components/parameters/reuse'
      responses:
        '200':
          description: OK
          
    post:
      tags:
        - Files
      summary: Create/Rename/Move/Copy file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/file_operation'
      responses:
        '200':
          description: OK

    put:
      tags:
        - Files
      summary: Lock/Unlock file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  $ref: '#/components/schemas/file_lock_operation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  type: "file"
                  repo_id: "eaa2b714-7993-4abc-93ce-56286d45d3de"
                  parent_dir: "/内层"
                  obj_name: "b"
                  obj_id: "0000000000000000000000000000000000000000"
                  size: 0
                  mtime: "2024-03-04T15:44:56+08:00"
                  is_locked: true
                  can_preview: false
                  can_edit: false
    delete:
      tags:
        - Files
      summary: Delete file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example:
                  success
                  
  /api2/repos/{repo_id}/file/detail/?p={p}:
    get:
      tags:
        - Files
      summary: Get file detail
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  permission: 
                    type: string
                  
                example:
                  type: 'file'
                  id: '000000000000'
                  name: 'test.md'
                  permission: 'rw'
                  mtime: 1709530197
                  last_modified: "2024-03-04T13:29:57+08:00"
                  last_modifier_email: "77a423e4804a4d7ca1ec78a150d71229@auth.local"
                  last_modifier_name: "xiaowu"
                  last_modifier_contact_email: "1942999482@qq.com"
                  size: 7839
                  starred: false
                  comment_total: 0
                  can_edit: true


  /api/v2.1/smart-link/?repo_id={repo_id}&path={path}&is_dir={is_dir}:
    get:
      tags:
        - Files
      summary: Get smart link for a file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id_query'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/is_dir'
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  smart_link:
                    type: string
                  smart_link_token:
                    type: string
                  name:
                    type: string
              example:
                smart_link: "https://cloud.seafile.com/smart-link/e5f748cf-be0b-4b9c-bcb5-63b6eccf791c/"
                smart_link_token: "e5f748cf-be0b-4b9c-bcb5-63b6eccf791c"
                name: "b"

  /api/v2.1/repos/sync-batch-copy-item/:
    post:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Batch copy items synchronously
      description: Batch Copy Items Synchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "success": true
                        }

  /api/v2.1/repos/sync-batch-move-item/:
    post:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Batch move items synchronously
      description: Batch Move Items Synchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "success": true
                        }

  /api/v2.1/repos/batch-delete-item/:
    delete:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Batch delete items
      description: Batch Delete Items
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                dirents:
                  $ref: '#/components/schemas/src_dirents'
              required:
                - repo_id
                - parent_dir
                - dirents
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "success": true,
                "commit_id": "d3c4fe38ce453e289f0b6de139b3419822ff07c2"
                        }

  /api/v2.1/repos/async-batch-copy-item/:
    post:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Batch copy items asynchronously
      description: Batch Copy Items Asynchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "task_id": "216533cd-96e8-40be-af83-ef7b0edbf5bb"
                      }

  /api/v2.1/repos/async-batch-move-item/:
    post:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Batch move items asynchronously
      description: Batch Move Items Asynchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                  "task_id": "d40df789-5e0b-4007-b590-203a04d6cb90"
                      }

  /api/v2.1/query-copy-move-progress/:
    get:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Query async operation progress
      description: Query Async Operation Progress
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "done": 1,
                "total": 1,
                "canceled": false,
                "failed": false,
                "successful": true
                        }

  /api/v2.1/copy-move-task/:
    delete:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Cancel async operation
      description: Cancel Async operation
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                task_id: 
                  type: string
                  example: d40df789-5e0b-4007-b590-203a04d6cb90
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "success": true
                      }

  /api/v2.1/repos/{repo-id}/zip-task/:
    post: 
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Get task token
      description: Get Task Token
      security: 
        - AccountTokenAuth: []
      parameters:
         - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                parent_dir:
                  type: string
                  example: /my_folder
                dirents: 
                  type: string
                  example: pdfs
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "zip_token": "b2272645-35ee-44ce-8f68-07c022107015"
                      }
  /api/v2.1/query-zip-progress/?token={token}:
    get:
      tags:
        - Batch Operation with Multiple Files/Directories
      summary: Query task progress
      description: Query task progress
      security: 
        - AccountTokenAuth: []
      parameters:
         - $ref: '#/components/parameters/zip_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "zipped":2,
                "total":2
                        }

  /api2/groups/:
    get:
      tags:
        - Groups
      summary: List Groups
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK

  /api/v2.1/groups/:
    post:
      tags:
        - Groups
      summary: Add a Group
      security:
        - AccountTokenAuth: []
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           name:
      #             $ref: '#/components/schemas/group_name'
      responses:
        '200':
          description: OK

  /api/v2.1/groups/{group_id}/:
    get:
      tags:
        - Groups
      summary: Get Info of a Group
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/avatar_size'
      responses:
        '200':
          description: OK

    put:
      tags:
        - Groups
      summary: Rename/Transfer a Group
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         oneOf:
      #           - $ref: '#/components/schemas/name'
      #           - $ref: '#/components/schemas/owner'
      responses:
        '200':
          description: OK

    delete:
      tags:
        - Groups
      summary: Delete a Group
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/v2.1/groups/{group_id}/members/:
    get:
      tags:
        - Groups
      summary: List All Group Members
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/avatar_size'
        # - $ref: '#/components/parameters/is_admin'
      responses:
        '200':
          description: OK

    post:
      tags:
        - Groups
      summary: Add a Group Member
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           email:
      #             $ref: '#/components/schemas/email'
      responses:
        '200':
          description: OK

  /api/v2.1/groups/{group_id}/members/bulk/:
    post:
      tags:
        - Groups
      summary: Bulk Add Group Members
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           emails:
      #             $ref: '#/components/schemas/emails'
      responses:
        '200':
          description: OK

  /api/v2.1/groups/{group_id}/members/{email}/:
    get:
      tags:
        - Groups
      summary: Get Info of a Group Member
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/avatar_size'
      responses:
        '200':
          description: OK

    put:
      tags:
        - Groups
      summary: Set/Unset a Group Admin
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/email'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           is_admin:
      #             $ref: '#/components/schemas/is_admin'
      responses:
        '200':
          description: OK

    delete:
      tags:
        - Groups
      summary: Leave group or group owner/admin delete a group member
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/email'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/v2.1/invitations/:
    get:
      tags:
        - Invitations
      summary: List invitations
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK

    post:
      tags:
        - Invitations
      summary: Add invitation
      security:
        - AccountTokenAuth: []
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           type:
      #             $ref: '#/components/schemas/type'
      #           accepter:
      #             $ref: '#/components/schemas/accepter'
      responses:
        '200':
          description: OK

  /api/v2.1/invitations/batch/:
    post:
      tags:
        - Invitations
      summary: Batch add invitations
      security:
        - AccountTokenAuth: []
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           type:
      #             $ref: '#/components/schemas/type'
      #           accepter:
      #             $ref: '#/components/schemas/batch_accepter'
      responses:
        '200':
          description: OK

  /api/v2.1/invitations/{invitation_token}/:
    get:
      tags:
        - Invitations
      summary: Get invitation
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/invitation_token'
      responses:
        '200':
          description: OK

    delete:
      tags:
        - Invitations
      summary: Delete invitation
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/invitation_token'
      responses:
        '200':
          description: OK

  /api/v2.1/invitations/{invitation_token}/revoke/:
    delete:
      tags:
        - Invitations
      summary: Revoke invitation
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/invitation_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api2/default-repo/:
    get:
      tags:
        - Libraries
      summary: Default library
      description: Get Default Library
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                exists: true,
                repo_id: "eaa2b714-7993-4abc-93ce-56286d45d3de"

    post:
      tags:
        - Libraries
      summary: Default library
      description: Create Default Library
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                exists: true,
                repo_id: "eaa2b714-7993-4abc-93ce-56286d45d3de"


  /api2/repos/:
    get:
      tags:
        - Libraries
      summary: List libraries/Search library by name
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/library_type'
        - $ref: '#/components/parameters/nameContains'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    "type":
                      type: string
                      description: |
                        The `type` field in the response indicates the type of library:
                        - `repo`: Libraries owned by the user.
                        - `srepo`: Libraries shared with the user.
                        - `grepo`: Group libraries or libraries shared with all users.

                  example: [
                      {
                          "type": "repo",
                          "id": "d5620899-1e9b-4a8c-b9af-b00a26324407",
                        "owner": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "owner_name": "syq",
                        "owner_contact_email": "1942999482@qq.com",
                        "name": "reply",
                        "mtime": 1709560091,
                        "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "modifier_contact_email": "1942999482@qq.com",
                        "modifier_name": "syq",
                        "mtime_relative": "<time datetime=\"2024-03-04T21:48:11\" is=\"relative-time\" title=\"Mon, 04 Mar 2024 21:48:11 +0800\" >12 hours ago</time>",
                        "size": 2483389,
                        "size_formatted": "2.4 MB",
                        "encrypted": false,
                        "permission": "rw",
                        "virtual": false,
                        "root": "",
                        "head_commit_id": "5e9ef6db4105cdc44dc5270da3f55a3036970d42",
                        "version": 1,
                        "salt": ""
                    }
                   ]

    post:
      tags:
        - Libraries
      summary: Create (Encrypted) library
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/repo_name'
                passwd:
                  $ref: '#/components/schemas/library_passwd'
                storage_id:
                  $ref: '#/components/schemas/storage_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                {
                "relay_id": "44e8f253849ad910dc142247227c8ece8ec0f971",
                "relay_addr": "127.0.0.1",
                "relay_port": "80",
                "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                "token": "89661286502d98af109f30bb54b63a4b587e5e60",
                "repo_id": "6d833ca8-392e-4dbf-8f4f-af4895fff121",
                "repo_name": "test",
                "repo_desc": "",
                "repo_size": 0,
                "repo_size_formatted": "0 bytes",
                "mtime": 1709609851,
                "mtime_relative": "<time datetime=\"2024-03-05T11:37:31\" is=\"relative-time\" title=\"Tue, 05 Mar 2024 11:37:31 +0800\" >Just now</time>",
                "encrypted": 1,
                "enc_version": 2,
                "salt": "",
                "magic": "bc184948365cf90d211b53a82d5cc0c1921eb757788527e0be09c4d7ca22d0cf",
                "random_key": "0fb038875aa44237db4a7567facf02397fbe2cc890ddcf244af97632510dcab042500a15848bdc326ff3289f48d18afe",
                "repo_version": 1,
                "head_commit_id": "4875e1352495c8248349b47619718597e7b3a6ab",
                "permission": "rw"
              }

  /api2/repos/{repo_id}/:
    get:
      tags:
        - Libraries
      summary: Get library info
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                For normal library:
                  value:
                    type: "repo"
                    id: "f02212a2-a899-403c-93b7-334dffb8ea6e"
                    owner: "self"
                    name: "python"
                    mtime: 1709537557
                    size: 7839
                    encrypted: false
                    root: "abddbda4e1315a4d2ed671194a47fad34637e4f2"
                    permission: "rw"
                    modifier_email: "77a423e4804a4d7ca1ec78a150d71229@auth.local"
                    modifier_contact_email: "1942999482@qq.com"
                    modifier_name: "test"
                    file_count: 2
                    head_commit_id: "1afe67b9bb1816912d496412c6076316937da58c"
                For encrypted library:
                  value:
                    {
                    "type": "repo",
                    "id": "6d833ca8-392e-4dbf-8f4f-af4895fff121",
                    "owner": "self",
                    "name": "test",
                    "mtime": 1709609851,
                    "size": 0,
                    "encrypted": true,
                    "root": "0000000000000000000000000000000000000000",
                    "permission": "rw",
                    "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                    "modifier_contact_email": "1942999482@qq.com",
                    "modifier_name": "test",
                    "file_count": 0,
                    "head_commit_id": "4875e1352495c8248349b47619718597e7b3a6ab",
                    "enc_version": 2,
                    "salt": "",
                    "magic": "bc184948365cf90d211b53a82d5cc0c1921eb757788527e0be09c4d7ca22d0cf",
                    "random_key": "0fb038875aa44237db4a7567facf02397fbe2cc890ddcf244af97632510dcab042500a15848bdc326ff3289f48d18afe"
                  }

    post:
      tags:
        - Libraries
      summary: Rename/Decrypt library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/op'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/library_operation'
              
      responses:
        '200':
          description: OK

    delete:
      tags:
        - Libraries
      summary: Delete library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK

  /api2/repos/{repo_id}/owner/:
    get:
      tags:
        - Libraries
      summary: Get library owner
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                {"owner": "77a423e4804a4d7ca1ec78a150d71229@auth.local"}

    put:
      tags:
        - Libraries
      summary: Transfer library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  $ref: '#/components/schemas/repo_owner'
      responses:
        '200':
          description: OK

  /api/v2.1/repos/{repo_id}/history/:
    get:
      tags:
        - Libraries
      summary: Get library history
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                {
                "commits": [
                    {
                        "id": "5853e0638e31555fc606b28b57ff653b44703c19",
                        "creator_name": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "creator": "0000000000000000000000000000000000000000",
                        "desc": "Changed library name or description",
                        "ctime": 1709616042,
                        "parent_id": "d6955bc6cdd7856dc5fcce9485f5d337e132aaa5",
                        "second_parent_id": null,
                        "repo_id": "a55a7292-0f75-4803-8914-0279e3e701b0",
                        "root_id": "0000000000000000000000000000000000000000",
                        "version": 1,
                        "new_merge": false,
                        "conflict": false,
                        "rev_file_id": null,
                        "rev_file_size": 0,
                        "rev_renamed_old_path": null,
                        "device_name": null,
                        "client_version": null,
                        "next_start_commit": null
                    },
                    {
                        "id": "d6955bc6cdd7856dc5fcce9485f5d337e132aaa5",
                        "creator_name": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "creator": "0000000000000000000000000000000000000000",
                        "desc": "Changed library name or description",
                        "ctime": 1709616025,
                        "parent_id": "a6143d7b0c91bb08a4a3264e61bb4689a9d4e88a",
                        "second_parent_id": null,
                        "repo_id": "a55a7292-0f75-4803-8914-0279e3e701b0",
                        "root_id": "0000000000000000000000000000000000000000",
                        "version": 1,
                        "new_merge": false,
                        "conflict": false,
                        "rev_file_id": null,
                        "rev_file_size": 0,
                        "rev_renamed_old_path": null,
                        "device_name": null,
                        "client_version": null,
                        "next_start_commit": null
                    },
                ],
                "page_next": false
                }

  /api2/repos/{repo_id}/history-limit/:
    get:
      tags:
        - Libraries
      summary: Get library history limit days
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                {"keep_days": 60}

    put:
      tags:
        - Libraries
      summary: Set library history limit days
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keep_days:
                  $ref: '#/components/schemas/keep_days'
      responses:
        '200':
          description: OK

  /api/v2.1/repos/{repo_id}/trash/:
    get:
      tags:
        - Libraries
      summary: Get library trash
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/path_in_query'
        - $ref: '#/components/parameters/show_days'
        - $ref: '#/components/parameters/scan_stat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: 
                {
                  "data": [
                        {
                            "parent_dir": "/",
                            "obj_name": "1.pptx",
                            "deleted_time": "2024-03-05T15:11:29+08:00",
                            "scan_stat": null,
                            "commit_id": "9ddc5bb951a91e1f761d37f74620231ce5c8604c",
                            "is_dir": false,
                            "size": 34707,
                            "obj_id": "36ad147552afe49ad0cf60754d0ed4e61efe35d1"
                        }
                    ],
                    "more": false,
                    "scan_stat": null
                    }

    delete:
      tags:
        - Libraries
      summary: Clean library trash
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/v2.1/repos/{repo_id}/commits/{commit_id}/:
    get:
      tags:
        - Libraries
      summary: Get library commit info
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/commit_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: {
                "commit_info": {
                    "description": "Added or modified \"1.md\" and 2 more files.\nDeleted \"default.jpeg\".\nRenamed \"123.umind\" and 1 more files.\nAdded \"789\" and 1 more directories.\nRemoved directory \"456\".\n",
                    "creator_name": "lian-name",
                    "creator_email": "lian@lian.com",
                    "device_name": "lian mac pro work",
                    "time": "2024-03-4T10:17:03+08:00",
                    "creator_contact_email": "lian@lian.com"
                },
                "commit_diffs": [
                    {
                        "op_type": "renamed",
                        "path": "/123/123.umind",
                        "new_path": "/123/123.umind copy"
                    },
                    {
                        "op_type": "renamed",
                        "path": "/d0efd88ejw1f6vqsjmjh9j20c846i4i6.jpg",
                        "new_path": "/123.jpg"
                    },
                    {
                        "op_type": "modified",
                        "path": "/123/1.md",
                        "new_path": ""
                    },
                    {
                        "op_type": "deldir",
                        "path": "/123/456",
                        "new_path": ""
                    },
                    {
                        "op_type": "newdir",
                        "path": "/123/789",
                        "new_path": ""
                    },
                    {
                        "op_type": "newdir",
                        "path": "/abd",
                        "new_path": ""
                    },
                    {
                        "op_type": "removed",
                        "path": "/default.jpeg",
                        "new_path": ""
                    },
                    {
                        "op_type": "new",
                        "path": "/departments copy.md",
                        "new_path": ""
                    },
                    {
                        "op_type": "modified",
                        "path": "/info.md",
                        "new_path": ""
                    }
                ]
              }

  /api2/repos/public/:
    post:
      tags:
        - Shared with All Libraries
      summary: Create Shared with All Library
      security:
        - AccountTokenAuth: []
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           repo_name:
      #             $ref: '#/components/schemas/repo_name'
      #           permission:
      #             $ref: '#/components/schemas/permission'
      #           passwd:
      #             $ref: '#/components/schemas/password'
      responses:
        '200':
          description: OK

  /api2/shared-repos/{repo_id}/:
    put:
      tags:
        - Shared with All Libraries
      summary: Set Exist Lib as Shared with All Library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           permission:
      #             $ref: '#/components/schemas/permission'
      #           share_type:
      #             $ref: '#/components/schemas/share_type'
      responses:
        '200':
          description: OK

    delete:
      tags:
        - Shared with All Libraries
      summary: Remove Shared with All Library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           share_type:
      #             $ref: '#/components/schemas/share_type'
      responses:
        '200':
          description: OK

  /api2/server-info/:
    get:
      tags:
        - Server Info
      summary: Get Server Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  encrypted_library_version:
                    type: integer
                  features:
                    type: array
                    items:
                      type: string
                example:
                  version: '10.0'
                  encrypted_library_version: 2
                  features: [
                    seafile-basic,
                  ]

  /api/v2.1/share-links/:
    get:
      tags:
        - Share links
      summary: List all Share Links
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK



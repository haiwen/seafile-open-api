openapi: 3.0.3
info:
  title: Account Operations - User
  description: |-
    The official SeaTable API Reference (OpenAPI 3.0). - Part 'User Account Operations'.
  version: '11'
servers:
  - url: https://{server}
    variables: 
      server:
        default: cloud.seafile.com

x-readme:
  explorer-enabled: true
  metrics-enabled: false
  proxy-enabled: false

components:
  securitySchemes:
    AccountTokenAuth:
      type: http
      scheme: bearer
      description: This is the [Account-Token](/reference/authentication).

  # Reusable path, query, header and cookie parameters
  parameters:
    # Query parameters
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
      example: 1

    per_page:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
      example: 25

    avatar_size:
      name: avatar_size
      in: query
      required: false
      schema:
        type: integer
      example: 72

    dir_path:
      name: path
      in: query
      description: 'Path of the dir'
      required: false
      schema:
        type: string
    
    detail_dir_path: 
      name: path
      in: query
      description: Path to the dir
      required: true
      schema: 
        type: string

    dir_p: 
      name: p
      in: query
      description: 'Path to the dir'
      required: false
      schema: 
        type: string

    directory_path:
      name: p
      in: query
      description: 'Path to the dir, should not be /'
      required: true
      schema:
        type: string

    parent_dir:
      name: parent_dir
      in: query
      description: 'Path to the parent_dir'
      required: true
      schema:
        type: string

    dirents:
      name: dirents
      in: query
      description: 'name of the dir'
      required: true
      schema:
        type: string

    token:
      name: token
      in: query
      description: 'The token returned from Get Task Token request'
      required: true
      schema:
        type: string
      example: b2272645-35ee-44ce-8f68-07c022107015

    invitation_token:
      name: invitation_token
      in: path
      required: true
      description: Invitation token
      schema:
        type: string
      example: b2272645-35ee-44ce-8f68-07c022107015

    object_id:
      name: oid
      in: query
      description: 'The object id of the directory. The object id is the checksum of the directory contents.'
      required: false
      schema:
        type: string

    type:
      name: t
      in: query
      description: If set t argument as f, will only return file entries, and d for only dir entries.
      required: false
      schema:
        type: string
      example: 'f'

    recursive:
      name: recursive
      in: query
      required: false
      schema:
        type: string
        enum:
          - '0'
          - '1'
        default: '0'

    library_type:
      name: type
      in: query
      required: false
      schema:
        enum:
          - mine
          - shared
          - group
          - org
        description: |- 
          - mine, get my owned libraries.
          - shared, get libraries shared to me.
          - group, get group libraries.
          - org, get shared-with-all libraires.
        default: mine

    nameContains:
      name: nameContains
      in: query
      required: false
      description: The name of the library 
      schema:
          type: string

    op:
      name: op
      in: query
      required: false
      description: Modify the name passing parameter 
      schema:
        type: string
        enum: [rename]
        default: rename
    
    path_in_query:
      name: path
      in: query
      description: path of file/folder.
      required: false
      schema:
        type: string
        default: '/'

    path:
      name: path
      in: path
      description: 'path of file/folder.'
      required: true
      schema:
        type: string

    show_days:
      name: show_days
      in: query
      required: false
      schema:
        type: string
        default: 100

    scan_stat:
      name: scan_stat
      in: query
      description: "An opaque status returned by the last call. In the first call, None must be passed. The last entry of the result list contains a 'scan_stat' attribute. In the next call, pass in the returned 'scan_stat'."
      required: false
      schema:
        type: string
        
    upload_ret-json:
      name: ret-json
      in: query
      description:  returns a json array including file info if set to 1. If this parameter is not set, the file ids will be returned in a tab-separated string. New apps should set ret-json to 1.
      required: false
      schema:
        type: string
    
    upload_need_idx_progres:
      name: need_idx_progres
      in: query
      required: false
      description: Set to true  to ask the server to index file content asynchronously after upload is finished. So that the client doesn't have to wait until the file indexing is completed, which can take some time. The request returns a task_id to check file indexing progress.
      schema:
        type: string

    file_name:
      name: file_name
      in: query
      required: true
      description: 'filename'
      schema:
        type: string

    file_path:
      name: file_path
      in: query
      required: true
      description: 'The path of the file in the library'
      schema:
        type: string

    comment_p:
      name: p
      in: query
      required: true
      description: 'The path of the file in the library'
      schema: 
        type: string

    commit_id_in_query:
      name: commit_id
      in: query
      required: false
      description: commit id used for get more file history. If not passed, Seafile will use library's head commit id as its default value and return the latest history.
      schema: 
        type: string
    
    history_path:
      name: path
      in: query
      required: true
      description: file path
      schema:
        type: string
  
    commit_id_query:
      name: commit_id
      in: query
      required: true
      description: The unique identifier of a commit
      schema:
        type: string
    q:
      name: q
      in: query
      required: true
      description: keyword for searching.
      schema: 
        type: string

    search_repo:  
      name: search_repo
      in: query
      required: false
      description: all, mine, shared, group, public or a repo_id, (all for searching in all libraries, etc.), optional. For searching in shared libraries, you can also pass shared_from or not_shared_from parameter beside shared to filter shared libraries.
      schema: 
        type: string
        enum:
          - "all"
          - "mine"
          - "shared"
          - "group"
          - "public"
          - "repo_id"
        required:
          - "all"
          - "mine"
          - "shared"
          - "group"
          - "public"
          - "repo_id"
        default: all
    
    search_path:
      name: search_path
      in: query
      required: false
      description: path of specifiy library.(This option works only when search_repo is a single repo_id.)
      schema: 
        type: string
    
    search_ftypes:
      name: search_ftypes
      in: query
      required: false
      description: all or custom, (all for searching all file types, custom for only searching the specific file types you defined in ftype and input_fexts).
      schema: 
        type: string
        default: all
    
    ftype:
      name: ftype
      in: query
      required: false
      description: |-
        must be in (Text, Document, Image, Video, Audio, PDF, Markdown).
        - TEXT: ('ac', 'am', 'bat', 'c', 'cc', 'cmake', 'cpp', 'cs', 'css', 'diff', 'el', 'h', 'html', 'htm', 'java', 'js', 'json', 'less', 'make', 'org', 'php', 'pl', 'properties', 'py', 'rb', 'scala', 'script', 'sh', 'sql', 'txt', 'text', 'tex', 'vi', 'vim', 'xhtml', 'xml', 'log', 'csv', 'groovy', 'rst', 'patch', 'go'),
        - DOCUMENT: ('doc', 'docx', 'ppt', 'pptx', 'odt', 'fodt', 'odp', 'fodp'),
        - IMAGE: ('gif', 'jpeg', 'jpg', 'png', 'ico', 'bmp', 'tif', 'tiff', 'eps'),
        - VIDEO: ('mp4', 'ogv', 'webm', 'mov'),
        - AUDIO: ('mp3', 'oga', 'ogg'),
        - PDF: ('pdf',),
        - MARKDOWN: ('markdown', 'md'),

      schema:
        type: string
        
    with_permission:
      name: with_permission
      in: query
      required: false
      description: true or false. Whether return permission info of the file or not, default is false.
      schema:
        type: boolean

    task_id:
      name: task_id
      in: query
      required: true
      description: 'Asynchronous operation id' 
      schema: 
        type: string
    
    zip_token:
      name: token
      in: query
      description: ""
      required: true
      schema: 
        type: string

    is_admin:
      name: is_admin
      in: query
      description: "true or false, if only return admin members of group.  default false return all members"
      required: false
      schema: 
        type: string
        default: false
    
    share_type: 
      name: share_type
      in: query
      description: must be public
      required: true
      schema: 
        type: string
        enum:
          - public
        example: public

    share_path:
      name: path
      in: query
      description: sub folder path
      required: false
      schema: 
        type: string
        example: /test
        default: /

    password: 
      name: password
      in: query
      description: if link is encrypted
      required: false
      schema: 
        type: string

    path_query_folder: 
      name: path
      in: query
      description: Folder path
      schema: 
        type: string
        default: /

    tag_name: 
      name: tag_name
      in: query
      description: Tag name
      required: true
      schema: 
        type: string
        example: v1

    folder_path: 
      name: folder_path
      description: path of folder
      in: query
      required: true
      schema: 
        type: string
        example: /test

    p:
      name: p
      in: query
      description: 'The path of the file in the library'
      required: true
      schema:
        type: string

    reuse:
      name: reuse
      in: query
      description: Set reuse to 1 if you want the generated download link can be accessed more than once in one hour.
      required: false
      schema:
        type: string
    
    repo_id_query:
      name: repo_id
      in: query
      description: 'The unique identifier of a library'
      required: true
      schema:
        type: string

    path_in_query_true: 
      name: path
      in: query
      description: / stands for unstar a library.
      required: true
      schema: 
        type: string
        example: /test
    
    is_dir:
      name: is_dir
      in: query
      description: 'true or false'
      required: true
      schema: 
        type: string
    
    path_in_file:
      name: path
      in: query
      required: true
      description:  path of file/folder
      schema: 
        type: string
    
    p_library: 
      name: p
      in: query
      required: false
      description: '`/` means the root folder, which is equivalent to the library.'
      schema: 
        type: string
        enum:
          - /

    share_type_libraries: 
      name: share_type
      in: query
      description: "`user` or `group`"
      required: true
      schema: 
        type: string
        enum:
          - user
          - group
        example: user

    username: 
      name: username
      in: query
      required: true
      description: a email string
      schema: 
        type: string
        example: Seafile@example.com

    group_id_query: 
      name: group_id
      in: query
      required: true
      description: an integer
      schema: 
        type: integer

    share_type_library: 
      name: share_type
      in: query
      required: true
      description: "`user` or `group`"
      schema: 
        type: string
        enum:
          - user
          - group

    from: 
      name: from
      in: query
      required: true
      description: User email
      schema: 
        type: string
        example: Seafile@example.com
    
    share_type_all: 
      name: share_type
      in: query
      required: true
      description: share type
      schema: 
        type: string
        example: "personal"

    share_type_user: 
      name: share_type
      in: query
      required: true
      schema: 
        type: string
        enum:
          - user

    # Path parameters
    folder_link_token: 
      name: token
      in: path
      required: true
      description: Folder share link token
      schema:
        type: string
    user:
      name: user
      in: path
      required: true
      schema:
        type: string
      example: user@example.com

    size:
      name: size
      in: path
      required: true
      schema:
        type: integer
      example: 64

    group_id:
      name: group_id
      in: path
      description: The unique identifier of a group
      required: true
      schema:
        type: integer

    email:
      name: email
      in: path
      required: true
      description: Member email
      schema:
        type: string

    repo_id:
      name: repo_id
      in: path
      description: The unique identifier of a library
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

    comment_id:
      name: pk
      in: path
      required: true
      description: The unique identifier of a comment
      schema:
        type: integer

    repo_tag_id:
      name: repo_tag_id
      in: path
      required: true
      description: The unique identifier of a tag
      schema:
        type: integer

    file_tag_id:
      name: file_tag_id
      in: path
      required: true
      schema:
        type: integer

    upload_token:
      name: upload_token
      in: path
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

    commit_id:
      name: commit_id
      in: path
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
    
    pk:
      name: pk
      in: path
      required: true
      schema:
        type: integer

    share_token:
      name: token
      in: path
      required: true
      schema: 
        type: string

    upload_link_token: 
      name: token
      in: path
      description: upload link token
      required: true
      schema: 
        type: string


  schemas:
    # request body
    group_name: 
      title: name
      description: Group name
      type: string
      example: 'test'

    avatar:
      type: string
      description: >-
        Upload an image file. Authorized extensions are : .jpg, .png, .jpeg, .gif. Accepted max size is 1.0 MB.
      format: binary

    avatar_size:
      type: string

    repo_name:
      description: 'Name of the library'
      type: string
      example: 'test'

    permission:
      type: string
      description: "'r' or 'rw'"
      example: r

    operation_share: 
      type: string
      description: "`share`"
      enum: [share]

    library_name: 
      type: string
      description: name of library
      example: "test-public-repo"

    folder_path: 
      type: string
      description: path of folder
      example: "/folder"

    user_email: 
      type: string
      description: user email
      example: Seafile@example.com

    password:
      type: string

    username:
      type: string
      example: 1@1.com

    username_list:
      type: array
      description: User email
      items:
        type: string
      example: [1@1.com, 2@2.com]

    group_id:
      type: integer
      description: The unique identifier of a group
      example: 1

    group_id_list:
      type: array
      description: The unique identifier of a group
      items:
        type: integer
      example: [1, 2]

    dir_path:
      description: 'Path of the dir'
      type: string
      example: '/'

    platform:
      type: string
      example: linux

    device_id:
      type: string
      example: be10980211752515053bf9036a13139375de0cc8

    remote_wipe:
      type: string
      default: ''

    operation:
      type: string
      enum:
        - mkdir
        - rename
      example: mkdir

    create_parents:
      type: string
      description: whether to create multi-level directory, default false.
      default: 'false'

    newname:
      type: string
      description: the new name of the directory / file.

    commit_id:
      type: string
      description: Unique identification of the operation
      example: b1a33768517f65ac7d618ff078dd27855374c7e0

    tag_names: 
      type: string
      description: Separate multiple label names with commas (,)
      example: v2.1,v2.2


    src_repo_id:
      type: string
      description: The unique identifier of a library
      pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

    src_parent_dir:
      type: string
      description: File path
      example: '/src'

    src_dirent_name:
      type: string
      description: Directory name
      example: folder

    src_dirents:
      type: array
      items:
        type: string
        example: ["1.md","2.md"]

    dst_repo_id:
      type: string
      description: The unique identifier of a library
      pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'

    dst_parent_dir:
      type: string
      description: File path
      example: '/dst'

    create_directory:
      title: 'Create New Directory'
      type: object
      properties:
        operation:
          type: string
          enum: [mkdir]
        create_parents:
          $ref: '#/components/schemas/create_parents'

    rename_directory:
      title: 'Rename Directory'
      type: object
      properties:
        operation:
          type: string
          enum: [rename]
        newname:
          $ref: '#/components/schemas/newname'

    
    file_operation_create:
      title: 'Create file'
      type: object
      properties:
        operation:
          type: string
          enum: [create]
        

    file_operation_move:
      title: 'Move file'
      type: object
      properties:
        operation:
          type: string
          enum: [move]
        dst_repo:
          $ref: '#/components/schemas/dst_repo'
        dst_dir:
          $ref: '#/components/schemas/dst_dir'

    file_operation_copy:
      title: 'Copy file'
      type: object
      properties:
        operation:
          type: string
          enum: [copy]
        dst_repo:
          $ref: '#/components/schemas/dst_repo'
        dst_dir:
          $ref: '#/components/schemas/dst_dir'
    
    file_operation_rename:
      title: 'Rename file'
      type: object
      properties:
        operation:
          type: string
          enum: [rename]
        newname:
          $ref: '#/components/schemas/new_name'

    file_operation:
      oneOf:
        - $ref: '#/components/schemas/file_operation_create'
        - $ref: '#/components/schemas/file_operation_copy'
        - $ref: '#/components/schemas/file_operation_move'
        - $ref: '#/components/schemas/file_operation_rename'
    
    share_type_library: 
      type: string
      description: "`user` or `group`"
      enum:
        - user
        - group

    share_permission: 
      type: string
      description: r, rw or admin, default r.
      default: 'r'

    share_user: 
      title: Share a Library to User
      type: object
      properties:
        share_type: 
          type: string
          enum:
            - user 
        username: 
          type: string
          description: A email string or a list contains multi emails
          example: Seafile@example.com
        permission: 
          $ref: '#/components/schemas/share_permission'

    share_group: 
      title: Share a Library to Group
      type: object
      properties:
        share_type: 
          type: string
          enum:
            - group
        group_id: 
          $ref: '#/components/schemas/group_id'
        permission: 
          $ref: '#/components/schemas/share_permission'

    share_operation: 
      oneOf:
        - $ref: '#/components/schemas/share_user'
        - $ref: '#/components/schemas/share_group'

    share_user_batch:
      title: User
      type: object
      properties:
        operation: 
          $ref: '#/components/schemas/operation_share'
        permission: 
          $ref: '#/components/schemas/permission'
        repo_id: 
          $ref: '#/components/schemas/repo_id'
        share_type: 
          type: string
          description: '`user`'
          enum:
            - user
        username: 
          $ref: '#/components/schemas/username'
    share_group_batch: 
      title: Group
      type: object
      properties:
        operation: 
          $ref: '#/components/schemas/operation_share'
        permission: 
          $ref: '#/components/schemas/permission'
        repo_id: 
          $ref: '#/components/schemas/repo_id'
        share_type: 
          type: string
          description: '`group`'
          enum:
            - group
        group_id: 
            $ref: '#/components/schemas/group_id'
    share_operation_batch: 
      oneOf:
        - $ref: '#/components/schemas/share_user_batch'
        - $ref: '#/components/schemas/share_group_batch'

    library_create: 
      title: Create library
      type: object
      properties:
              name:
                $ref: '#/components/schemas/repo_name'
              passwd:
                $ref: '#/components/schemas/library_passwd'
              storage_id:
                $ref: '#/components/schemas/storage_id'
        
    library_create_encrypted: 
      title: Encrypted library
      type: object
      properties:
        from :
          type: string
          description: if not passed, Seafile will generate repo sync token and then return it; if set its value to web , Seafile will not generate repo sync token.
        name : 
          type: string
          description: repo's name.
        repo_id: 
          type: string
        magic: 
          type: string
        random_key: 
          type: string
        enc_version : 
          type: string
          description: 0 or 1 or 2 or 3 . if passed 0 or 1 or 2 , Seafile will create v2 encrypted repo; if passed 3 , Seafile will create v3 encrypted repo. Note, if 3 is passed, client MUST passes salt parameter too.
        salt : 
          type: string
          description: used for create v3 encrypted repo.
      
    create_operation: 
      oneOf:
        - $ref: '#/components/schemas/library_create'
        - $ref: '#/components/schemas/library_create_encrypted'

    file_lock_operation:
      title: 'operation'
      type: string
      enum:
        - lock
        - unlock
      example: "lock"

    new_name:
      title: 'newname'
      type: string
      example: 'test.md'

    dst_repo:
      title: dst_repo
      type: string
      example: affc837f-7fdd-4e91-b88a-32caf99897f2
    
    dst_dir: 
      title: dst_dir
      type: string
      example: /123
    
    library_passwd:
      type: string
      example: test
      description: needed by encrypted library

    storage_id:
      type: string
      description: when multiple storage backends enabled, use this identifier for storage object.

    op_rename:
      title: 'Rename library'
      type: object
      properties:
        repo_name:
          type: string
          
    op_password:
      title: 'Decrypt library'
      type: object
      properties:
        password:
          type: string

    library_operation:
      oneOf:
        - $ref: '#/components/schemas/op_rename'
        - $ref: '#/components/schemas/op_password'

    repo_owner:
      type: string
      description: The format should be "department_id@seafile_group"
      example: 62e7d27c7d4f42d8afcc35e2002b812c@auth.local

    keep_days:
      type: string
      description: -1 for keep full history; 0 for do not keep history; positive number for keep a period of limit days.
      example:  8

    upload_file:
      type: object
      properties:
        file:
          type: string
          description: this field contains the contents to be uploaded.
          format: binary
        parent_dir:
          type: string
          description: path in your Seafile repo that you want to upload local file to. This path must be the same as the 'p' parameter you specified when getting the upload link.
        relative_path: 
          type: string
          description: sub-folder of "parent_dir", if this sub-folder does not exist, Seafile will create it recursively. When you upload a folder, you should set this parameter to the uploaded folder's name.
        replace:
          type: string
          description: whether to overwrite file when it already exists. 1 for replace, 0 for not replace. If existing file is not replaced, the uploaded file will be renamed to the form "filename (1).txt".

    file:
      type: object
      properties:
        file:
          type: string
          description: this field contains the contents to be uploaded.
          format: binary
        target_file:
          type: string
          description: The absolute path inside the library of the file being updated.
    
    name: 
      type: string
      title: name
      description: New file name
      example: new_group
  
    owner: 
      type: string
      title: owner
      description: new owner of this group, should be an email.
      example: new_owner@new_owner.com

    email: 
      type: string
      title: email
      description: Member email.
      example: new_owner@new_owner.com

    emails:
      type: string
      title: emails
      example: new_owner@new_owner.com,new_owner2@new_owner.com

    is_admin: 
      type: string
      title: is_admin
      enum: ["true","false"]
      example: "true"
    
    share_type: 
      type: string
      description: must be public
      enum:
        - public
      example: public
    
    type: 
      type: string
      description: User type
      example: guest
    
    accepter: 
      type: string
      description: User email address
      example: example@example.com

    batch_accepter: 
      type: string
      description: 'You can add multiple accepter' 
      example: example@example.com
    
    repo_id:
      type: string
      description: The unique identifier of a library
      example: d5620899-1e9b-4a8c-b9af-b00a26324407

    path: 
      type: string
      description: path of folder/file
      example: "/folder"
    
    expire_days: 
      type: string
      description: Set expiration time
    
    share_link_permission: 
      type: object
      description: Operation permission
      properties:
        can_edit: 
          type: boolean
          enum:
            - false
            - true
        can_download: 
          type: boolean
          enum:
            - true
            - false
        can_upload:
          type: boolean
          enum:
            - true
            - false

    token: 
      type: string 
      description: Link token
      example: a8ea01ae4aad44bbb316

    extra_msg: 
      type: string
      description: Extra message
      
    # Response body
    FileRevert: 
      type: object
      properties:
        success: 
          type: boolean

    FileCreate:
      type: object
      description: Basic file information
      properties:
        type:
          type: string
        repo_id:
          type: string
        parent_dir: 
          type: string
        obj_name: 
          type: string
        obj_id: 
          type: string
        size: 
          type: integer
        mtime: 
          type: string
        is_locked: 
          type: boolean
        can_preview: 
          type: boolean
        can_edit: 
          type: boolean

    file_upload_noret: 
      type: string
      description: Returns the file identifier

    file_upload_ret: 
      type: array
      items:
        type: object
        description: File information
        properties:
          name: 
            type: string
          id: 
            type: string
          size: 
            type: integer
    
    file_upload_task_id: 
      type: object
      description: File index progress information
      properties:
        indexed: 
          type: integer
        total: 
          type: integer
        status: 
          type: integer
        ret_json: 
          type: string

    share_r_group:
      title: Share a Library to Group
      type: object
      description: Share information about successes and failures
      properties:
        failed: 
          type: array
          items: 
            type: object
        success: 
          type: array
          items: 
            type: object
            properties:
              share_type: 
                type: string
              group_info: 
                type: object
                description: group info
                properties:
                  id: 
                    type: integer
                  name: 
                    type: string
              permission: 
                type: string
              is_admin: 
                type: boolean

    share_r_user:
      title: Share a Library to User
      type: object
      description: Share information about successes and failures
      properties:
        failed: 
          type: array
          items: 
            type: object
            properties:
              email: 
                type: string
              error_msg:
                type: string
        success: 
          type: array
          items:
            type: object
            properties:
              share_type: 
                type: string
              user_info: 
                type: object
                description: User info
                properties: 
                  name: 
                    type: string
                  nickname: 
                    type: string
                  contact_email: 
                    type: string
                  avatar_url: 
                    type: string
              permission: 
                type: string
              is_admin: 
                type: boolean
              
    create: 
      title: create
      type: object
      description: File information
      properties:
        is_locked: 
          type: boolean
        mtime:
          type: string
        obj_id: 
          type: string
        obj_name: 
          type: string
        parent_dir: 
          type: string
        repo_id: 
          type: string
        size: 
          type: integer
        type: 
          type: string
    
    rename: 
      title: rename
      type: string
      description: Returns a 'success' string
      example: "success"

    move: 
      title: move
      type: object
      properties:
        repo_id: 
          type: string
        parent_dir: 
          type: string
        obj_name: 
          type: string

    copy: 
      title: copy
      type: object
      properties:
        repo_id: 
          type: string
        parent_dir: 
          type: string
        obj_name: 
          type: string

    share_type_user: 
      title: user
      type: array
      items: 
        type: object
        description: Share user info
        properties:
          share_type: 
            type: string
          user_info: 
            type: object
            description: User info
            properties:
              name: 
                type: string
              nickname: 
                type: string
              contact_email: 
                type: string
              avatar_url: 
                type: string
          permission: 
            type: string
          is_admin: 
            type: boolean

    share_type_group: 
      title: group
      type: array
      items: 
        type: object
        properties:
          share_type: 
            type: string
          group_info: 
            type: object
            properties:
              id: 
                type: integer
              name: 
                type: string
          permission: 
            type: string
          is_admin:   
            type: boolean
      
    
    user_profile_name:
      type: string
      description: user's nickname, if no value passed, this field will not be changed
      example:  new_name
    telephone: 
      type: string
      description: if no value passed, this field will not be changed
      example: 120

    contact_email: 
      type: string
      description: if no value passed, or pass your old contact email, this field will not be changed
      example: example@example.com

    list_in_address_book: 
      type: boolean
      description: "`true` or `false`, whether list your account in global address book, if no value passed, this field will not be changed"
      example: true

paths:
  # Account
  /api2/account/info/:
    get:
      tags:
        - Account
      summary: Get account info
      description: Return account information.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Account information
                properties:
                  login_id: 
                    type: string
                  is_staff: 
                    type: boolean
                  name: 
                    type: string
                  email_notification_interval: 
                    type: integer
                  institution: 
                    type: string
                  department: 
                    type: string
                  avatar_url: 
                    type: string
                  contact_email: 
                    type: string
                  space_usage: 
                    type: string
                  usage: 
                    type: string
                  total: 
                    type: string
                  email: 
                    type: string
              example:
                login_id: ''
                is_staff: false
                name: foo
                email_notification_interval: 0
                institution: ''
                department: ''
                avatar_url: http://127.0.0.1:8000/media/avatars/default.png
                contact_email: test@example.com
                space_usage: 73.40217%
                usage: 22020651,
                total: 30000000,
                email: 'foo@foo.com'

  /api2/client-login/:
    post:
      tags:
        - Account
      summary: Get client token
      description: Return a token that can be used by the client to login.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: 
                    type: string
              example: {"token": "e462c3662e99418fb3ee1aa30478b2ed"}
                
  # Activities
  /api/v2.1/activities/:
    get:
      tags:
        - Activities
      summary: Get file activities
      description: Get current user's file activities.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/avatar_size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      description: File activitie info
                      properties:
                        op_type: 
                          type: string
                        repo_id: 
                          type: string
                        repo_name: 
                          type: string
                        obj_type: 
                          type: string
                        commit_id: 
                          type: string
                        path: 
                          type: string
                        name: 
                          type: string
                        author_email: 
                          type: string
                        author_name: 
                          type: string
                        author_contact_email: 
                          type: string
                        avatar_url: 
                          type: string
                        time: 
                          type: string
              example:
                events:
                  - commit_id: 56ad4dfa70f79d2c7a8a6e032acda65d824e7946
                    obj_type: file
                    repo_id: 231afed9-9e6c-4314-9247-dfc3ee0ac734
                    name: temp.md
                    author_email: a@example.com
                    author_contact_email: a@example.com
                    time: 2023-05-14T09:42:48+00:00
                    author_name: aaa
                    avatar_url: http://127.0.0.1:8000/media/avatars/d/1/0ca8d11301c2f4993ac2279ce4b930/resized/72/03e77af8819c66f25260297dd5e97dc7.png
                    op_type: edit
                    path: /temp.md
                    repo_name: documents

  /api/v2.1/user-avatar/:
    post:
      tags:
        - Avatars
      summary: Upload/Update user avatar
      description: Upload an image to make it your current avatar. After successful uploading/updating your avatar, the file will be renamed and converted to .png. The URL of your new avatar is returned in the response.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/avatar'
                avatar_size:
                  $ref: '#/components/schemas/avatar_size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatar_url: 
                    type: string
                    description: Avatar link
              example:
                avatar_url: >-
                  https://cloud.seafile.com/media/avatars/2/4/fa66e6b3a50e2707997ec5eed3eda0/resized/64/a92f89f3e23c7fe9cc708454cdd010df_Y7zJE8v.png

  /api2/avatars/user/{user}/resized/{size}/:
    get:
      tags:
        - Avatars      
      summary: Get user avatar
      description: Returns the user's avatar link
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/user'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Avatar info
                properties:
                  url: 
                    type: string
                  is_default:
                    type: boolean
                  mtime:
                    type: integer
              example:
                url: http://127.0.0.1:8000/media/avatars/default.png
                is_default: true
                mtime: 0

  /api/v2.1/groups/{group_id}/group-owned-libraries/:
    post:
      tags:
        - Department libraries
      summary: Add group owned library
      description: Create a library based on the unique identifier of the group, which is shared with group members.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/repo_name'
                permission:
                  $ref: '#/components/schemas/permission'
                password:
                  $ref: '#/components/schemas/password'
              required:
                - repo_name
                - permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Department library info
                properties:
                  id: 
                    type: string
                  name: 
                    type: string
                  mtime: 
                    type: string
                  size: 
                    type: integer
                  encrypted: 
                    type: boolean
                  owner: 
                    type: string
                  group_name: 
                    type: string
                  permission: 
                    type: string
                example: {
                  "id": "4150d508-9014-413d-b1d5-3f0cc9d28e64",
                  "name": "test",
                  "mtime": "2024-03-13T11:27:58+08:00",
                  "size": 0,
                  "encrypted": false,
                  "owner": "2251@seafile_group",
                  "group_name": "公司AAA",
                  "permission": "rw"
                      }

  /api/v2.1/groups/{group_id}/group-owned-libraries/{repo_id}/:
    put:
      tags:
        - Department libraries
      summary: Rename a group owned library
      description: Modify the name of an existing library in a group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/repo_name'
              required:
                - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Library info
                properties:
                  id: 
                    type: string
                  name: 
                    type: string
                  mtime: 
                    type: string
                  size: 
                    type: integer
                  encrypted: 
                    type: boolean
                  owner: 
                    type: string
                  group_name: 
                    type: string
              example: {
                  "id": "3711f753-0577-4080-9723-064acc726aff",
                  "name": "test1",
                  "mtime": "2024-03-13T11:32:22+08:00",
                  "size": 0,
                  "encrypted": false,
                  "owner": "2251@seafile_group",
                  "group_name": "公司AAA"
                }

  /api/v2.1/groups/{group_id}/libraries/{repo_id}/:
    delete:
      tags:
        - Department libraries
      summary: Delete group owned library
      description: Delete specified group owned library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  /api/v2.1/group-owned-libraries/{repo_id}/user-share/:
    get:
      tags:
        - Department libraries
      summary: Get group owned library user share info
      description: Returns the group owned library user share information. 
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/dir_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: User info
                  properties:
                    permission: 
                      type: string
                    user_name: 
                      type: string
                    user_email:
                      type: string
                  example:
                    permission: rw
                    user_name: '1'
                    user_email: 1@1.com
                    user_contact_email: 1@1.com

    post:
      tags:
        - Department libraries
      summary: Share group owned library to user
      description: Share a library owned by a group to a specific user.return successful and failed user information
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                username:
                  $ref: '#/components/schemas/username_list'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      type: object
                      description: Error message
                      properties:
                        email: 
                          type: string
                        error_msg:
                          type: string
                  success:
                    type: array
                    items:
                      type: object
                      description: User info
                      properties:
                        permission: 
                          type: string
                        user_name: 
                          type: string
                        user_email:
                          type: string
                        user_contact_email:
                          type: string
              example:
                failed: [
                  {
                    email: 2@2.com,
                    error_msg: User 2@2.com not found.
                  }
                ]
                success: [
                  {
                    permission: r,
                    user_name: '1',
                    user_email: 1@1.com,
                    user_contact_email: 1@1.com
                  }
                ]

    put:
      tags:
        - Department libraries
      summary: Modify group owned library user share permission
      description: Modify group owned library user share permission
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                username:
                  $ref: '#/components/schemas/username'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

    delete:
      tags:
        - Department libraries
      summary: Delete group owned library user share
      description: Stop sharing a library to a user.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  $ref: '#/components/schemas/username'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  /api/v2.1/group-owned-libraries/{repo_id}/group-share/:
    get:
      tags:
        - Department libraries
      summary: Get group owned library group share info
      description: Lists all groups that are shared with a particular library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/dir_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Group info
                  properties:
                    permission: 
                      type: string
                    group_id: 
                      type: integer
                    group_name: 
                      type: string
                  example:
                    permission: r
                    group_id: 1
                    group_name: test-group

    post:
      tags:
        - Department libraries
      summary: Share group owned library to group
      description: Return group information or failure reason
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                group_id:
                  $ref: '#/components/schemas/group_id_list'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - group_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      type: object
                      description: Error message
                      properties:
                        error_msg:
                          type: string
                  success:
                    type: array
                    items:
                      type: object
                      description: Group info
                      properties:
                        permission: 
                          type: string
                        group_id: 
                          type: integer
                        group_name:
                          type: string
              example:
                failed: [
                  {
                    error_msg: Group 2 not found.
                  }
                ]
                success: [
                  {
                    permission: r,
                    group_id: 1,
                    group_name: test-group
                  }
                ]

    put:
      tags:
        - Department libraries
      summary: Modify group owned library group share permission
      description: Modify group owned library group share permission
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  $ref: '#/components/schemas/permission'
                group_id:
                  $ref: '#/components/schemas/group_id'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - group_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

    delete:
      tags:
        - Department libraries
      summary: Delete group owned library group share
      description: Stop sharing a library to a group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  $ref: '#/components/schemas/group_id'
                path:
                  $ref: '#/components/schemas/dir_path'
              required:
                - group_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  /api2/devices/:
    get:
      tags:
        - Devices
      summary: List devices
      description: List all login device information
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Device login information
                  properties:
                    key: 
                      type: string
                    user: 
                      type: string
                    platform: 
                      type: string
                    device_id: 
                      type: string
                    device_name: 
                      type: string
                    client_version: 
                      type: string
                    platform_version: 
                      type: string
                    last_accessed: 
                      type: string
                    last_login_ip: 
                      type: string
                    wiped_at: 
                      type: string
                    is_desktop_client: 
                      type: boolean
                example: [
                  {
                  "key": "c7c0b12ce800c8e1cb548992519f85ee5b553b7f",
                  "user": "admin@seafile.com",
                  "platform": "android",
                  "device_id": "0cedaf9cfb8cc6d9",
                  "device_name": "VOG-AL00",
                  "client_version": "2.3.2",
                  "platform_version": "10",
                  "last_accessed": "2023-07-06T10:23:16+08:00",
                  "last_login_ip": "61.177.181.50",
                  "wiped_at": null,
                  "is_desktop_client": false
                  },]

    delete:
      tags:
        - Devices
      summary: Unlink device
      description: Delete the specified device information.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                platform:
                  $ref: '#/components/schemas/platform'
                device_id:
                  $ref: '#/components/schemas/device_id'
                remote_wipe:
                  $ref: '#/components/schemas/remote_wipe'
              required:
                - platform
                - device_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  /api2/repos/{repo_id}/dir/:
    get:
      tags:
        - Directories
      summary: List items in directory
      description: Lists all the items information in the directory
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/dir_p'
        - $ref: '#/components/parameters/object_id'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/recursive'
      responses:
        '200':
          description: If oid is the same as the current oid of the directory, returns 'uptodate' , else return a list of object.
          content:
            application/json:
              schema:
                type: array
                description: File and folder infor
                items:
                  type: object
                  properties:
                    modifier_email: 
                      type: string
                    size: 
                      type: integer
                    is_locked: 
                      type: boolean
                    lock_owner: 
                      type: string
                    lock_time: 
                      type: integer
                    locked_by_me: 
                      type: string
                    type: 
                      type: string
                    name: 
                      type: string
                    id: 
                      type: string
                    mtime: 
                      type: number
                    permission: 
                      type: string
                    modifier_contact_email: 
                      type: string
                    modifier_name: 
                      type: string
                    starred: 
                      type: boolean
                example: [
                  {
                      "type": "dir",
                      "name": "folder",
                      "id": "9dd8d4c5edbbe0fe23ef53459f4450dfd482e930",
                      "mtime": 1710230658,
                      "permission": "rw"
                  },
                  {
                      "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                      "size": 6940,
                      "is_locked": false,
                      "lock_owner": null,
                      "lock_time": 0,
                      "locked_by_me": false,
                      "type": "file",
                      "name": "default.docx",
                      "id": "cfee33f6cd94ebe03a1d0409d81ab45a73ee9da8",
                      "mtime": 1709782109,
                      "permission": "rw",
                      "modifier_contact_email": "daniel@example.com",
                      "modifier_name": "Seafile",
                      "starred": false
                  }]

    post:
      tags:
        - Directories
      summary: Create new or rename directory
      description: |- 
        - Create: Newly created directory will be renamed if the name is duplicated.
        - Rename: If the new name is the same of the old name no operation will be done.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/directory_path'
      requestBody:
        content:
          multipart/form-data:
            schema:
              oneOf:
                - $ref: '#/components/schemas/create_directory'
                - $ref: '#/components/schemas/rename_directory'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
                description: Returns a 'success' string
                example:
                  'success'


    delete:
      tags:
        - Directories
      summary: Delete directory
      description: Deletes the specified directory.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/directory_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: Returns a 'success' string
                example:
                 'success'

  /api/v2.1/repos/{repo_id}/dir/detail/:
    get:
      tags:
        - Directories
      summary: Get directory detail
      description: Returns detailed information about the directory
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/detail_dir_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Directory details
                properties:
                  repo_id: 
                    type: string
                  path: 
                    type: string
                  name: 
                    type: string
                  mtime: 
                    type: string
                  permission: 
                    type: string
                example: {
                    "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                    "path": "/list/",
                    "name": "list",
                    "mtime": "2024-03-13T14:15:42+08:00",
                    "permission": "rw"
                   }

  /api2/repos/{repo_id}/dir/revert/:
    put:
      tags:
        - Directories
      summary: Revert directory to a history status
      description: The commit_id is obtained by obtaining the file history, which can be used to restore to the historical status.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  $ref: '#/components/schemas/dir_path'
                commit_id:
                  $ref: '#/components/schemas/commit_id'
              required:
                - path
                - commit_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  /api/v2.1/repos/{repo_id}/zip-task/:
    get:
      tags:
        - Directories
      summary: Get task directory token
      description: Returns the token used to query the progress of the task.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/parent_dir'
        - $ref: '#/components/parameters/dirents'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  zip_token:
                    type: string
                    description: Task token
                example:
                  zip_token: b2272645-35ee-44ce-8f68-07c022107015

    # post:
    #   tags:
    #     - Directories
    #   summary: Get multiple directories Token
    #   description: Download Multiple Items, Get Task Token
    #   security:
    #     - AccountTokenAuth: []
    #   parameters:
    #     - $ref: '#/components/parameters/repo_id'
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           parent_dir:
      #             $ref: '#/components/schemas/parent_dir'
      #           dirents:
      #             $ref: '#/components/schemas/dirents'
      # responses:
      #   '200':
      #     description: OK
      #     content:
      #       application/json:
      #         schema:
      #           type: object
      #           properties:
      #             zip_token:
      #               type: string
      #           example:
      #             zip_token: b2272645-35ee-44ce-8f68-07c022107015

  /api/v2.1/query-zip-progress/:
    get:
      tags:
        - Directories
      summary: Query task progress
      description: The task progress is queried by the obtained zip_token.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Progress info
                properties:
                  zipped: 
                    type: integer
                    description: If zipped is equal to total, means task finished.
                  total: 
                    type: integer
                  failed: 
                    type: integer
                  failed_reason: 
                    type: string
                  canceled: 
                    type: integer
                example: {
                  "zipped": 0,
                  "total": 0,
                  "failed": 0,
                  "failed_reason": "",
                  "canceled": 0
                  }

  /api/v2.1/move-folder-merge/:
    post:
      tags:
        - Directories
      summary: Move directory with items merged
      description: Merge a directory into another directory.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirent_name:
                  $ref: '#/components/schemas/src_dirent_name'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirent_name
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  # TODO: Supplementary parameters, requestBody, responses, etc.
  /api2/repos/{repo_id}/file/comments/:
    get:
      tags:
        - File comments
      summary: List file comments
      description: Lists all comment information for the file, including information about the user who commented
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: 'File all comment information' 
                properties:
                  comments: 
                    type: array
                    items:
                      type: object
                      properties:
                        comment: 
                          type: string
                        repo_id: 
                          type: string
                        item_name:
                          type: string
                        created_at:
                          type: string
                        parent_path:
                          type: string
                        avatar_url:
                          type: string
                        user_name:
                          type: string
                        id: 
                          type: integer
                        user_email:
                          type: string
                        user_contact_email:
                          type: string
                example: {
                  "comments": [
                      {
                          "comment": "word",
                          "repo_id": "4674c2bb-3702-4dd0-b768-8952db27ac87",
                          "item_name": "doc",
                          "created_at": "2017-10-11T02:49:42+00:00",
                          "parent_path": "/doc",
                          "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                          "user_name": "admin",
                          "id": 7,
                          "user_email": "admin@admin.com",
                          "user_contact_email": "admin@admin.com"
                      },
                      {
                          "comment": "help",
                          "repo_id": "4674c2bb-3702-4dd0-b768-8952db27ac87",
                          "item_name": "doc",
                          "created_at": "2017-10-11T02:49:44+00:00",
                          "parent_path": "/doc",
                          "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                          "user_name": "admin",
                          "id": 8,
                          "user_email": "admin@admin.com",
                          "user_contact_email": "admin@admin.com"
                      },
                      {
                          "comment": "test",
                          "repo_id": "4674c2bb-3702-4dd0-b768-8952db27ac87",
                          "item_name": "doc",
                          "created_at": "2017-10-11T03:32:37+00:00",
                          "parent_path": "/doc",
                          "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                          "user_name": "admin",
                          "id": 10,
                          "user_email": "admin@admin.com",
                          "user_contact_email": "admin@admin.com"
                      }
                  ]
                    } 


    post:
      tags:
        - File comments
      summary: Submit a file comment
      description: Add a comment to the file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_p'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: hello          
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Basic information about the review
                properties:
                  id: 
                    type: integer
                  repo_id: 
                    type: string
                  parent_path: 
                    type: string
                  item_name: 
                    type: string
                  comment: 
                    type: string
                  created_at: 
                    type: string
                  updated_at: 
                    type: string
                  resolved: 
                    type: boolean
                  detail: 
                    type: string
                  replies: 
                    type: array
                  user_name: 
                    type: string
                  user_email:
                    type: string
                  user_contact_email: 
                    type: string
                  avatar_url: 
                    type: string
                example: {
                  "id": 285,
                  "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                  "parent_path": "/",
                  "item_name": "test",
                  "comment": "hello",
                  "created_at": "2024-03-07T10:09:12+08:00",
                  "updated_at": "2024-03-07T10:09:12+08:00",
                  "resolved": false,
                  "detail": "",
                  "replies": [],
                  "user_name": "Seafile",
                  "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                  "user_contact_email": "daniel@example.com",
                  "avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/80/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png"
                      }

  /api2/repos/{repo_id}/file/comments/{pk}/:
    get:
      tags:
        - File comments
      summary: Get a file comment
      description: Returns comment information for the specified file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Basic information about the review
                properties:
                  id: 
                    type: integer
                  repo_id: 
                    type: string
                  parent_path: 
                    type: string
                  item_name: 
                    type: string
                  comment: 
                    type: string
                  created_at: 
                    type: string
                  updated_at: 
                    type: string
                  resolved: 
                    type: boolean
                  detail: 
                    type: string
                  replies: 
                    type: array
                  user_name: 
                    type: string
                  user_email:
                    type: string
                  user_contact_email: 
                    type: string
                  avatar_url: 
                    type: string
              example: {
                  "id": 285,
                  "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                  "parent_path": "/",
                  "item_name": "test",
                  "comment": "hello",
                  "created_at": "2024-03-07T10:09:12+08:00",
                  "updated_at": "2024-03-07T10:09:12+08:00",
                  "resolved": false,
                  "detail": "",
                  "replies": [],
                  "user_name": "Seafile",
                  "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                  "user_contact_email": "daniel@example.com",
                  "avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/80/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png"
                      }

    put:
      tags:
        - File comments
      summary: Update a file comment
      description: Update file with comment details.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                detail:
                  type: string
                  example: abc
                resolved:
                  type: string
                  description: true or false must be a string
                  example: "true"
              required:
                - detail
                - resolved
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Basic information about the review
                properties:
                  id: 
                    type: integer
                  repo_id: 
                    type: string
                  parent_path: 
                    type: string
                  item_name: 
                    type: string
                  comment: 
                    type: string
                  created_at: 
                    type: string
                  updated_at: 
                    type: string
                  resolved: 
                    type: boolean
                  detail: 
                    type: string
                  replies: 
                    type: array
                  user_name: 
                    type: string
                  user_email:
                    type: string
                  user_contact_email: 
                    type: string
                  avatar_url: 
                    type: string
              example: {
                "id": 285,
                "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                "parent_path": "/",
                "item_name": "test",
                "comment": "hello",
                "created_at": "2024-03-07T10:09:12+08:00",
                "updated_at": "2024-03-07T10:09:12+08:00",
                "resolved": false,
                "detail": "abc",
                "replies": [],
                "user_name": "test",
                "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                "user_contact_email": "daniel@example.com",
                "avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/80/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png"
                      }
    delete:
      tags:
        - File comments
      summary: Delete a file comment
      description: Delete a specified file comment
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_id'
      responses:
        '200':
          description: OK

  /api2/repos/{repo_id}/file/comments/counts/:
    get:
      tags:
        - File comments
      summary: Get number of comments
      description: |-
        - If the parameter p represents a folder, this api will return comment count of all files in this folder. 
        - If the parameter p represents a file, only return comment count of this file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/comment_p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Return number of comments
                properties:
                  test: 
                    type: string
                example: { "test": 2 }

  /api/v2.1/repos/{repo_id}/file/history/:
    get:
      tags:
        - File history
      summary: Get file history
      description: Gets the history of the specified file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/history_path'
        - $ref: '#/components/parameters/commit_id_in_query'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: All operational data of the file
                properties:
                  data: 
                    type: array
                    description: |-
                      - If value of next_start_commit is NOT false, it means that there are more file history, if you want to continue to get more file history, resend the request with commit_id parameter, and assign the value of next_start_commit in response to request's commit_id parameter.
                      - If value of rev_renamed_old_path field in the last item of data in response is NOT null, it means that the last item is a file renamed/moved commit, if you want to get more file history before file was renamed/moved,  resend the request, and assign the value of rev_renamed_old_path in response to request's path parameter.
                    items: 
                      type: object
                      description: Returns all operation information about the file
                      properties:
                        creator_avatar_url: 
                          type: string
                        creator_email: 
                          type: string
                        creator_name: 
                          type: string
                        creator_contact_email: 
                          type: string
                        ctime: 
                          type: string
                        description: 
                          type: string
                        commit_id: 
                          type: string
                        size: 
                          type: integer
                        rev_renamed_old_path: 
                          type: string
                        rev_file_id: 
                          type: string
                        path: 
                          type: string
                  next_start_commit: 
                    type: boolean
                example: {
                    "data": [
                        {
                            "creator_avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/32/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png",
                            "creator_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                            "creator_name": "Seafile",
                            "creator_contact_email": "daniel@example.com",
                            "ctime": "2024-03-07T11:08:16+08:00",
                            "description": "Modified \"1.docx\"",
                            "commit_id": "3fce7037bd238aa619416b8f7e2d44f1102ad556",
                            "size": 25022,
                            "rev_file_id": "1067d1adbb93c196c4e83f47c672f2e8445d831c",
                            "rev_renamed_old_path": null,
                            "path": "/1.docx"
                        },
                        {
                            "creator_avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/32/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png",
                            "creator_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                            "creator_name": "Seafile",
                            "creator_contact_email": "daniel@example.com",
                            "ctime": "2024-03-07T11:07:41+08:00",
                            "description": "Modified \"1.docx\"",
                            "commit_id": "2a3772010975725d2106f6dec17cd4c6f02ea353",
                            "size": 7839,
                            "rev_file_id": "0f3530f88bb1e398773edabe3297b448798f3e2e",
                            "rev_renamed_old_path": null,
                            "path": "/1.docx"
                        },
                        {
                            "creator_avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/32/1672a4ff48124e6ada03a4414518cf4a_CNvUDQE.png",
                            "creator_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                            "creator_name": "Seafile",
                            "creator_contact_email": "daniel@example.com",
                            "ctime": "2024-03-07T11:07:41+08:00",
                            "description": "Added \"1.docx\"",
                            "commit_id": "b5d0996980e9199184b92c74e858fa6cba9b6b02",
                            "size": 0,
                            "rev_file_id": "0000000000000000000000000000000000000000",
                            "rev_renamed_old_path": null,
                            "path": "/1.docx"
                        }
                    ],
                    "next_start_commit": false
                        }

  /api/v2.1/repos/{repo_id}/file/:
    post:
      tags:
        - File history
      summary: Create/Restore file from history
      description: Recover the file by getting commit_id in the history.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                operation:
                  type: string
                  enum:
                    - "revert"
                    - "create"
                  example: revert
                commit_id:
                  type: string
                  example: 'b5d0996980e9199184b92c74e858fa6cba9b6b02'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/FileRevert'
                  - $ref: '#/components/schemas/FileCreate'
              examples:
                revert:
                  value: {
                    "success": true
                        }
                create:
                  value: {
                      "type": "file",
                      "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                      "parent_dir": "/",
                      "obj_name": "test.txt",
                      "obj_id": "0000000000000000000000000000000000000000",
                      "size": 0,
                      "mtime": "2024-03-07T11:36:35+08:00",
                      "is_locked": false,
                      "can_preview": true,
                      "can_edit": true
                        }
    put:
      tags:
        - Files
      summary: Lock/Unlock file
      description:  Lock or unlock the file, locked files cannot be modified
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  $ref: '#/components/schemas/file_lock_operation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Return file information
                properties:
                  type: 
                    type: string
                  repo_id: 
                    type: string
                  parent_dir: 
                    type: string
                  obj_name:
                    type: string
                  obj_id: 
                    type: string
                  size: 
                    type: integer
                  mtime:
                    type: string
                  is_locked:
                    type: boolean
                  can_preview:
                    type: boolean
                  can_edit:
                    type: boolean
                example:
                  type: "file"
                  repo_id: "eaa2b714-7993-4abc-93ce-56286d45d3de"
                  parent_dir: "/folder"
                  obj_name: "b"
                  obj_id: "0000000000000000000000000000000000000000"
                  size: 0
                  mtime: "2024-03-04T15:44:56+08:00"
                  is_locked: true
                  can_preview: false
                  can_edit: false   

  /api2/repos/{repo_id}/file/revision/:
    get:
      tags:
        - File history
      summary: Download file from a revision
      description: Return to the link to download the file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
        - $ref: '#/components/parameters/commit_id_query'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: string
                description: Download file link
                example: "https://cloud.seafile.com/seafhttp/files/c7764c20-bcef-42fe-ab7c-e37a4f0bd246/1.docx"

  /api2/search/:
    get:
      tags:
        - File search
      summary: Search files in libraries
      description: By providing an exact match or a vague match to the name, you can find files that match the search criteria.

      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
        - $ref: '#/components/parameters/search_repo'
        - $ref: '#/components/parameters/search_path'
        - $ref: '#/components/parameters/search_ftypes'
        - $ref: '#/components/parameters/ftype'
        - $ref: '#/components/parameters/with_permission'
      requestBody:
        required: false
        content:
          application/json:
            schema: 
              type: object
              properties:
                input_fexts:
                  type: string
                  description: file extensions manually specific.
                time_from:
                  type: integer
                  description: filter the result that the updated time greater than or equal to  this value. default unit is second.
                time_to:
                  type: integer
                  description: filter the result that the updated time less than or equal to  this value. default unit is second.
                size_from:
                  type: string
                  description: filter the result that the size greater than or equal to  this value. default unit is byte.
                size_to: 
                  type: string
                  description: filter the result that the size less than or equal to this value. default unit is byte.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: The queried file information
                properties:
                  total:
                    type: integer
                  has_more:
                    type: boolean
                  results: 
                    type: array
                    items: 
                      type: object
                      description: File information that meets the conditions
                      properties:
                        repo_owner_name: 
                          type: string
                        repo_id: 
                          type: string
                        name: 
                          type: string
                        repo_encrypted: 
                          type: boolean
                        repo_owner_contact_email: 
                          type: string
                        repo_owner_email: 
                          type: string
                        last_modified:
                          type: number
                        content_highlight: 
                          type: string
                        fullpath: 
                          type: string
                        repo_name: 
                          type: string
                        is_dir: 
                          type: boolean
                        size: 
                          type: integer        
                example: {
                    "has_more": false,
                    "total": 2,
                    "results": [
                        {
                            "repo_owner_name": "admin",
                            "repo_id": "2628a63b-cfad-41f5-a748-392ec9287686",
                            "name": "3a",
                            "repo_encrypted": False,
                            "repo_owner_contact_email": "admin@admin.com",
                            "repo_owner_email": "admin@admin.com",
                            "last_modified": 1520836447,
                            "content_highlight": "",
                            "fullpath": "/testtest/3a",
                            "repo_name": "dev",
                            "is_dir": false,
                            "size": 0
                        },
                        {
                            "repo_owner_name": "admin",
                            "repo_id": "2628a63b-cfad-41f5-a748-392ec9287686",
                            "name": "1a",
                            "repo_encrypted": False,
                            "repo_owner_contact_email": "admin@admin.com",
                            "repo_owner_email": "admin@admin.com",
                            "last_modified": 1520836462,
                            "content_highlight": "",
                            "fullpath": "/testtest/1a",
                            "repo_name": "dev",
                            "is_dir": false,
                            "size": 0
                        }
                    ]
                    }

  /api/v2.1/search-file/:
    get:
      tags:
        - File search
      summary: Search files by name in library
      description: Search files by name in library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id_query'
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: The queried file information
                properties:
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        path: 
                          type: string
                        size: 
                          type: integer
                        mtime:
                          type: string
                        type: 
                          type: string
                example: {
                  "data": [
                      {
                          "path": "/file",
                          "size": 0,
                          "mtime": "2024-03-07T13:37:40+08:00",
                          "type": "file"
                      }
                    ]
                        }

  /api/v2.1/repos/{repo_id}/repo-tags/:
    get:
      tags:
        - File tags
      summary: List all tags of a library
      description: Lists all the label information in the library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Information about all labels in the library
                properties:
                  repo_tags: 
                    type: array
                    items:
                      type: object
                      description: Label information
                      properties:
                        repo_tag_id:
                          type: integer
                        repo_id: 
                          type: string
                        tag_name: 
                          type: string
                        tag_color:
                          type: string
                        file_count:
                          type: integer
                example: {
                    "repo_tags": [
                        {
                            "repo_tag_id": 429,
                            "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                            "tag_name": "test",
                            "tag_color": "#FBD44A",
                            "files_count": 1
                        }
                                ]
                        }
    post:
      tags:
        - File tags
      summary: Add a tag to a library
      description: Use this request to add a new tag to the library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: tag name
                  example: test
                color:
                  type: string
                  description: tag color
                  example:  "#FBD44A"
              required:
                - name
                - color
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Label information
                properties:
                  repo_tag: 
                    type: object
                    properties:
                      repo_tag_id:
                        type: integer
                      repo_id: 
                        type: string
                      tag_name: 
                        type: string
                      tag_color:
                        type: string
                example: {
                      "repo_tag": {
                      "repo_tag_id": 430,
                      "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                      "tag_name": "t",
                      "tag_color": "#FFFFFF"
                              }
                        }

  /api/v2.1/repos/{repo_id}/repo-tags/{repo_tag_id}/:
    put:
      tags:
        - File tags
      summary: Update a tag of a library
      description: Update the parameters of an existing label.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/repo_tag_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: t1
                color:
                  type: string
                  example: '#000000'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Label information
                properties:
                  repo_tag: 
                    type: object
                    properties:
                      repo_tag_id:
                        type: integer
                      repo_id: 
                        type: string
                      tag_name: 
                        type: string
                      tag_color:
                        type: string
                example: {
                  "repo_tag": {
                      "repo_tag_id": 430,
                      "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                      "tag_name": "t1",
                      "tag_color": "#000000"
                              }
                        }
    delete:
      tags:
        - File tags
      summary: Delete a tag of a library
      description: Delete existing tags from the library
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/repo_tag_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: string
                example: {
                    "success": "true"
                        }

  /api/v2.1/repos/{repo_id}/file-tags/:
    get:
      tags:
        - File tags
      summary: List all tags of a file
      description: Gets all tag information on the file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/file_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: All label information of the file
                properties:
                  file_tags: 
                    type: array
                    items: 
                      type: object
                      description: Label information
                      properties:
                        tag_color: 
                          type: string
                        tag_name: 
                          type: string
                        repo_tag_id: 
                          type: integer
                        file_tag_id:
                          type: integer
                example: {
                    "file_tags": [
                        {
                            "tag_color": "#FFD43B",
                            "tag_name": "new",
                            "repo_tag_id": 1,
                            "file_tag_id": 1
                        },
                        {
                            "tag_color": "#FFA8A8",
                            "tag_name": "deprecated",
                            "repo_tag_id": 2,
                            "file_tag_id": 4
                        }
                                  ]
                      }

    post:
      tags:
        - File tags
      summary: Add a tag for a file
      description: Tag a file with an existing tag in the library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  description: file path
                  example: /
                repo_tag_id:
                  type: string
                  description: The tag id owned by the library
                  example: '2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: File label information
                properties:
                  file_tag: 
                    type: object
                    properties:
                      file_tag_id:
                        type: integer
                      repo_tag_id: 
                        type: integer
                example: {
                        "file_tag": {
                            "file_tag_id": 957,
                            "repo_tag_id": 429
                                    }
                          }

  /api/v2.1/repos/{repo_id}/file-tags/{file_tag_id}/:
    delete:
      tags:
        - File tags
      summary: Delete a tag from a file
      description: Delete the existing tags in the file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/file_tag_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: string
                example: { "success": "true" }
              
  /api/v2.1/repos/{repo_id}/tagged-files/{repo_tag_id}/:
    get:
      tags:
        - File tags
      summary: List tagged files by tag id
      description: List tagged files by tag id
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/repo_tag_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Tag file information
                properties:
                  tagged_files: 
                    type: array
                    items:
                      type: object
                      properties:
                        file_tag_id: 
                          type: integer
                        parent_path:
                          type: string
                        filename: 
                          type: string
                        size: 
                          type: integer
                        mtime:
                          type: string
                        last_modified: 
                          type: string
                        modifier_email: 
                          type: string
                        modifier_contact_email: 
                          type: string
                        modifier_name: 
                          type: string
                example: {
                  "tagged_files": [
                      {
                          "file_tag_id": 953,
                          "parent_path": "/",
                          "filename": "test",
                          "size": 43,
                          "mtime": 1709710694,
                          "last_modified": "2024-03-06T15:38:14+08:00",
                          "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "modifier_contact_email": "daniel@example.com",
                          "modifier_name": "Seafile"
                      },
                      {
                          "file_tag_id": 957,
                          "parent_path": "/",
                          "filename": "test.md",
                          "size": 0,
                          "mtime": 1709695513,
                          "last_modified": "2024-03-06T11:25:13+08:00",
                          "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "modifier_contact_email": "daniel@example.com",
                          "modifier_name": "Seafile"
                      }
                  ]
                  }
          
  /api2/repos/{repo_id}/upload-link/:
    get:
      tags:
        - File upload
      summary: Get upload link
      description: Reutrn an upload link.  These information are needed to upload a file/folder to a library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: The download address of the folder
                example: "https://cloud.seafile.com/seafhttp/upload-api/5b7d49bc-3756-4995-9e00-e5faddb3455b"
  
  /seafhttp/upload-api/{upload_token}?ret-json=1: 
    post:
      tags:
        - File upload
      summary: Upload file
      description: |-
        After getting the upload link, POST to this link for uploading files.
        The request body must be in multipart/form-data format.
        Upon successful upload, this API returns information about uploaded files in the response body.
        - If ret-json parameter is set to 1, the returned information is encoded in JSON. For each uploaded file, a JSON object containing "name", "id", "size" fields will be returned.
        - If ret-json parameter is set to 0, the returned information is a tab separated list of file IDs.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/upload_token'
        - $ref: '#/components/parameters/upload_ret-json'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/upload_file'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_upload_noret:
                     $ref: '#/components/schemas/file_upload_noret'
                  file_upload_ret:  
                     $ref: '#/components/schemas/file_upload_ret'
              examples:
                No ret-json:
                  value: adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
                ret-json:
                  value: [
                    {
                        "name": "test.txt",
                        "id": "4ccd37916552e2943314027931edd0b45240be7c",
                        "size": 2987
                    }
                  ]

  /api2/repos/{repo_id}/update-link/:
    get:
      tags:
        - File upload
      summary: Get update link
      description: Return an update link.  These information are needed to update a file/folder to a library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: string
                description: Update link
                example: "https://cloud.seafile.com/seafhttp/update-api/aa610889-04ce-4d25-979e-6cb528775038"

  /seafhttp/update-api/{upload_token}/:
    post:
      tags:
        - File upload
      summary: Update file
      description: After getting the update link, POST to this link for updating files.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/file'
      parameters:
        - $ref: '#/components/parameters/upload_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: string
                description: The id of the updated file
                example: "adc83b19e793491b1c6ea0fd8b46cd9f32e592fc"

  /api2/repos/{repo_id}/file/:
    get:
      tags:
        - Files
      summary: Download file
      description: Return a download link for this file
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
        - $ref: '#/components/parameters/reuse'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: string
                description: Return a download link for this file
                example: "https://cloud.seafile.com/seafhttp/files/48a7b633-25a4-4c8d-a10e-37dcfa34c65d/example.pdf"
          
    post:
      tags:
        - Files
      summary: Create/Rename/Move/Copy file
      description: With this request, you can create/rename/move/copy a file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/file_operation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                oneOf:
                  - $ref: '#/components/schemas/create'
                  - $ref: '#/components/schemas/rename'
                  - $ref: '#/components/schemas/move'
                  - $ref: '#/components/schemas/copy'
              examples: 
                Create file: 
                  value: {
                      'is_locked': False,
                      'mtime': '2024-03-12T14:57:42+08:00',
                      'obj_id': u'44bdca6005429390d1ecc6943b05c821bd30917a',
                      'obj_name': u'test.xlsx',
                      'parent_dir': u'/',
                      'repo_id': u'7460f7ac-a0ff-4585-8906-bb5a57d2e118',
                      'size': 7631,
                      'type': 'file'
                  }
                Rename file: 
                  value: success
                Move file: 
                  value: {
                    "repo_id": "affc837f-7fdd-4e91-b88a-32caf99897f2",
                    "parent_dir": "/example-folder",
                    "obj_name": "foo.c"
                      }
                Copy file: 
                  value: {
                    "repo_id": "affc837f-7fdd-4e91-b88a-32caf99897f2",
                    "parent_dir": "/example-folder",
                    "obj_name": "foo.c"
                      }
  
    delete:
      tags:
        - Files
      summary: Delete file
      description: Deletes the specified file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: Response code is 200, and a string "success" is returned.
                example: success
                  
  /api2/repos/{repo_id}/file/detail/:
    get:
      tags:
        - Files
      summary: Get file detail
      description: Returns details of the file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: File details
                properties:
                  type:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  permission: 
                    type: string
                  mtime:
                    type: string
                  last_modified:
                    type: string
                  last_modifier_email:
                    type: string
                  last_modifier_name:
                    type: string
                  last_modifier_contact_email:
                    type: string
                  size: 
                    type: integer
                  starred:
                    type: boolean
                  comment_total:
                    type: integer
                  can_edit:
                    type: boolean
                example:
                  type: 'file'
                  id: '000000000000'
                  name: 'test.md'
                  permission: 'rw'
                  mtime: 1709530197
                  last_modified: "2024-03-04T13:29:57+08:00"
                  last_modifier_email: "77a423e4804a4d7ca1ec78a150d71229@auth.local"
                  last_modifier_name: "Seafile"
                  last_modifier_contact_email: "daniel@example.com"
                  size: 7839
                  starred: false
                  comment_total: 0
                  can_edit: true

  /api/v2.1/smart-link/:
    get:
      tags:
        - Files
      summary: Get smart link for a file
      description: Returns link information for a file or folder.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id_query'
        - $ref: '#/components/parameters/path_in_file'
        - $ref: '#/components/parameters/is_dir'
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: object
                description: File link information
                properties:
                  smart_link:
                    type: string
                  smart_link_token:
                    type: string
                  name:
                    type: string
              example:
                smart_link: "https://cloud.seafile.com/smart-link/e5f748cf-be0b-4b9c-bcb5-63b6eccf791c/"
                smart_link_token: "e5f748cf-be0b-4b9c-bcb5-63b6eccf791c"
                name: "b"

  /api/v2.1/repos/sync-batch-copy-item/:
    post:
      tags:
        - Files/Directories batch operation
      summary: Batch copy items synchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        description: Content type of parameter must be application/json and passed through POST request's body.
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state
              example: {
                "success": true
                        }

  /api/v2.1/repos/sync-batch-move-item/:
    post:
      tags:
        - Files/Directories batch operation
      summary: Batch move items synchronously
      description: Batch Move Items Synchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        description: Content type of parameter must be application/json and passed through POST request's body.
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state
              example: {
                "success": true
                        }

  /api/v2.1/repos/batch-delete-item/:
    delete:
      tags:
        - Files/Directories batch operation
      summary: Batch delete items
      description: Delete files in bulk.
      security:
        - AccountTokenAuth: []
      requestBody:
        required: true
        description: Content type of parameter must be application/json and passed through DELETE request's body.
        content:
          application/json:
            schema:
              type: object
              properties:
                repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                dirents:
                  $ref: '#/components/schemas/src_dirents'
              required:
                - repo_id
                - parent_dir
                - dirents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                  commit_id: 
                    type: string
                    description: The unique identifier of a commit

              example: {
                "success": true,
                "commit_id": "d3c4fe38ce453e289f0b6de139b3419822ff07c2"
                        }

  /api/v2.1/repos/async-batch-copy-item/:
    post:
      tags:
        - Files/Directories batch operation
      summary: Batch copy items asynchronously
      description: Batch Copy Items Asynchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        description: Content type of parameter must be application/json and passed through POST request's body.
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Returned task id
                properties:
                  task_id: 
                    type: string
                example: {
                  "task_id": "216533cd-96e8-40be-af83-ef7b0edbf5bb"
                      }

  /api/v2.1/repos/async-batch-move-item/:
    post:
      tags:
        - Files/Directories batch operation
      summary: Batch move items asynchronously
      description: Batch Move Items Asynchronously
      security:
        - AccountTokenAuth: []
      requestBody:
        description: Content type of parameter must be application/json and passed through POST request's body.
        content:
          application/json:
            schema:
              type: object
              properties:
                src_repo_id:
                  $ref: '#/components/schemas/src_repo_id'
                src_parent_dir:
                  $ref: '#/components/schemas/src_parent_dir'
                src_dirents:
                  $ref: '#/components/schemas/src_dirents'
                dst_repo_id:
                  $ref: '#/components/schemas/dst_repo_id'
                dst_parent_dir:
                  $ref: '#/components/schemas/dst_parent_dir'
              required:
                - src_repo_id
                - src_parent_dir
                - src_dirents
                - dst_repo_id
                - dst_parent_dir
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Returned task id
                properties:
                  task_id: 
                    type: string
                example: {
                    "task_id": "d40df789-5e0b-4007-b590-203a04d6cb90"
                        }

  /api/v2.1/query-copy-move-progress/:
    get:
      tags:
        - Files/Directories batch operation
      summary: Query async operation progress
      description: Returns the execution progress of the asynchronous operation task.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Progress information
                properties:
                  done:
                    type: integer
                  total: 
                    type: integer
                  canceled: 
                    type: boolean
                  failed:
                    type: boolean
                  successful: 
                    type: boolean
                example: {
                  "done": 1,
                  "total": 1,
                  "canceled": false,
                  "failed": false,
                  "successful": true
                          }

  /api/v2.1/copy-move-task/:
    delete:
      tags:
        - Files/Directories batch operation
      summary: Cancel async operation
      description: Cancel the operation of an asynchronous task.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                task_id: 
                  type: string
                  example: d40df789-5e0b-4007-b590-203a04d6cb90
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state
                example: {
                  "success": true
                        }

  /api2/groups/:
    get:
      tags:
        - Groups
      summary: List groups
      description: List all your groups
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Information about all created groups
                properties:
                  replynum: 
                    type: integer
                  groups: 
                    type: array
                    items:
                      type: object
                      description: Group information
                      properties:
                        id: 
                          type: integer
                        name: 
                          type: string
                        creator: 
                          type: string
                        ctime: 
                          type: string
                        msgnum: 
                          type: integer
                example: {
                  "groups": [
                      {
                          "id": 3432,
                          "name": "test",
                          "creator": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "ctime": 1709619935388074,
                          "msgnum": 0
                      }
                  ],
                  "replynum": 0
                }

  /api/v2.1/groups/:
    post:
      tags:
        - Groups
      summary: Add a group
      description: Create a new group for you.
      security:
        - AccountTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/group_name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Group information
                properties:
                  id: 
                    type: integer
                  parent_group_id: 
                    type: integer
                  name: 
                    type: string
                  owner: 
                    type: string
                  created_at:
                    type: string
                  avatar_url: 
                    type: string
                  admins: 
                    type: array
                    items:
                      type: string
                  group_quota_usage:
                    type: integer
                example: {
                    "id": 3479,
                    "parent_group_id": 0,
                    "name": "group",
                    "owner": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                    "created_at": "2024-03-11T15:41:55+08:00",
                    "avatar_url": "https://cloud.seafile.com/media/avatars/groups/default.png",
                    "admins": [
                        "77a423e4804a4d7ca1ec78a150d71229@auth.local"
                    ],
                    "group_quota_usage": 0
                }


  /api/v2.1/groups/{group_id}/:
    get:
      tags:
        - Groups
      summary: Get info of a group
      description: Get the specific information of one group by its ID.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/avatar_size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Group information
                properties:
                  id: 
                    type: integer
                  parent_group_id: 
                    type: integer
                  name: 
                    type: string
                  owner: 
                    type: string
                  created_at:
                    type: string
                  avatar_url: 
                    type: string
                  admins: 
                    type: array
                    items:
                      type: string
                  group_quota_usage:
                    type: integer
                example: {
                    "id": 3479,
                    "parent_group_id": 0,
                    "name": "group",
                    "owner": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                    "created_at": "2024-03-11T15:41:55+08:00",
                    "avatar_url": "https://cloud.seafile.com/media/avatars/groups/default.png",
                    "admins": [
                        "77a423e4804a4d7ca1ec78a150d71229@auth.local"
                    ],
                    "group_quota_usage": 0
                }

    put:
      tags:
        - Groups
      summary: Rename/Transfer a group
      description: Rename the group or transfer the current owner to another user.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/name'
                - $ref: '#/components/schemas/owner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Group information
                properties:
                  id: 
                    type: integer
                  parent_group_id: 
                    type: integer
                  name: 
                    type: string
                  owner: 
                    type: string
                  created_at:
                    type: string
                  avatar_url: 
                    type: string
                  admins: 
                    type: array
                    items:
                      type: string
                  group_quota_usage:
                    type: integer
                example: {
                  "id": 3479,
                  "parent_group_id": 0,
                  "name": "new_group",
                  "owner": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                  "created_at": "2024-03-11T15:41:55+08:00",
                  "avatar_url": "https://cloud.seafile.com/media/avatars/groups/default.png",
                  "admins": [
                      "77a423e4804a4d7ca1ec78a150d71229@auth.local"
                  ],
                  "group_quota_usage": 0
                 }

    delete:
      tags:
        - Groups
      summary: Delete a group
      description: Delete a specified group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Returns a 'success' string

  /api/v2.1/groups/{group_id}/members/:
    get:
      tags:
        - Groups
      summary: List all group members
      description: Lists all member information in the group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/avatar_size'
        - $ref: '#/components/parameters/is_admin'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                description: Group information
                items: 
                  type: object
                  properties:
                    group_id: 
                      type: integer
                    name: 
                      type: string
                    email: 
                      type: string
                    contact_email:
                      type: string
                    login_id:
                      type: string
                    avatar_url: 
                      type: string
                    is_admin:
                      type: boolean
                    role: 
                      type: string
                example: [
                      {
                          "group_id": 3479,
                          "name": "xiaowu2",
                          "email": "Seahub@example.com",
                          "contact_email": "Seahub@example.com",
                          "login_id": "",
                          "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                          "is_admin": true,
                          "role": "Owner"
                      },
                      {
                          "group_id": 3479,
                          "name": "Seafile",
                          "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "contact_email": "daniel@example.com",
                          "login_id": "",
                          "avatar_url": "https://cloud.seafile.com/media/avatars/c/3/c06dc05c08708dd7bd3538c0a18bd0/resized/80/1672a4ff48124e6ada03a4414518cf4a_38OYAUD.png",
                          "is_admin": false,
                          "role": "Member"
                      }
                  ]

    post:
      tags:
        - Groups
      summary: Add a group member
      description: Add member to the specified group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/email'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Group information
                properties:
                  group_id: 
                      type: integer
                  name: 
                    type: string
                  email: 
                    type: string
                  contact_email:
                    type: string
                  login_id:
                    type: string
                  avatar_url: 
                    type: string
                  is_admin:
                    type: boolean
                  role: 
                    type: string
                example: {
                    "group_id": 3483,
                    "name": "&",
                    "email": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                    "contact_email": "daniel@example.com",
                    "login_id": "",
                    "avatar_url": "https://cloud.seafile.com/media/avatars/e/6/f489f6bea362e91740fd7a3a111800/resized/80/1672a4ff48124e6ada03a4414518cf4a_t5KAlDm.png",
                    "is_admin": false,
                    "role": "Member"
                     }

  /api/v2.1/groups/{group_id}/members/bulk/:
    post:
      tags:
        - Groups
      summary: Bulk add group members
      description: Add members in bulk for a specified group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emails:
                  $ref: '#/components/schemas/emails'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  failed: 
                    type: array
                    items: 
                      type: object
                      description: Error message
                      properties:
                        error_msg:
                          type: string
                        email: 
                          type: string
                  success: 
                    type: array
                    items: 
                      type: object
                      description: Memeber information
                      properties:
                        login_id:
                          type: string
                        name: 
                          type: string
                        avatar_url: 
                          type: string
                        is_admin: 
                          type: string
                        contact_email:
                          type: string
                        email: 
                          type: string
                example: 
                      failed: [
                          {
                              "error_msg": "Invalid email",
                              "email": "new-member-3@email.com"
                          },
                          {
                              "error_msg": "Is already group member",
                              "email": "new-member-4@email.com"
                          }]
                      success: [
                          {
                              "login_id": "",
                              "name": "new-member-1",
                              "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                              "is_admin": false,
                              "contact_email": "new-member-1@email.com",
                              "email": "new-member-1@email.com"
                          },
                          {
                              "login_id": "",
                              "name": "new-member-2",
                              "avatar_url": "https://cloud.seafile.com/media/avatars/default.png",
                              "is_admin": false,
                              "contact_email": "new-member-2@email.com",
                              "email": "new-member-2@email.com"
                          }
                      ]
                         


  /api/v2.1/groups/{group_id}/members/{email}/:
    get:
      tags:
        - Groups
      summary: Get info of a group member
      description: Returns group member information.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/avatar_size'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Member information
                properties:
                  group_id: 
                      type: integer
                  name: 
                    type: string
                  email: 
                    type: string
                  contact_email:
                    type: string
                  login_id:
                    type: string
                  avatar_url: 
                    type: string
                  is_admin:
                    type: boolean
                  role: 
                    type: string
                example: {
                  "group_id": 3483,
                  "name": "&",
                  "email": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                  "contact_email": "daniel@example.com",
                  "login_id": "",
                  "avatar_url": "https://cloud.seafile.com/media/avatars/e/6/f489f6bea362e91740fd7a3a111800/resized/80/1672a4ff48124e6ada03a4414518cf4a_t5KAlDm.png",
                  "is_admin": false,
                  "role": "Member"
                     }
    put:
      tags:
        - Groups
      summary: Set/Unset a group admin
      description: To set or unset a member as an administrator in a specified group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/email'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_admin:
                  $ref: '#/components/schemas/is_admin'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Member information
                properties:
                  group_id: 
                      type: integer
                  name: 
                    type: string
                  email: 
                    type: string
                  contact_email:
                    type: string
                  login_id:
                    type: string
                  avatar_url: 
                    type: string
                  is_admin:
                    type: boolean
                  role: 
                    type: string
                example: {
                  "group_id": 3483,
                  "name": "&",
                  "email": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                  "contact_email": "Seahub@example.com",
                  "login_id": "",
                  "avatar_url": "https://cloud.seafile.com/media/avatars/e/6/f489f6bea362e91740fd7a3a111800/resized/80/1672a4ff48124e6ada03a4414518cf4a_t5KAlDm.png",
                  "is_admin": false,
                  "role": "Member"
                    }

    delete:
      tags:
        - Groups
      summary: Leave group or group owner/admin delete a group member
      description: Leave group or group owner/admin delete a group member.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/email'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Success state
                properties:
                  success:
                    type: boolean

  /api/v2.1/invitations/:
    get:
      tags:
        - Invitations
      summary: List invitations
      description: Returns all invitations initiated by the current user.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  description: Invitation info
                  properties:
                    id: 
                      type: integer
                    token: 
                      type: string
                    inviter: 
                      type: string
                    accepter: 
                      type: string
                    type: 
                      type: string
                    invite_time: 
                      type: string
                    accept_time: 
                      type: string
                    expire_time: 
                      type: string
              example: [
                    {
                        "id": 32,
                        "token": "776df132d6f34a88952d60f644705c96",
                        "inviter": "9b4393c623c74243b0ad43709701687d@auth.local",
                        "accepter": "Seafile@example.com",
                        "type": "guest",
                        "invite_time": "2024-03-14T13:31:18+08:00",
                        "accept_time": "",
                        "expire_time": "2024-03-17T13:31:18+08:00"
                    }
                ]

    post:
      tags:
        - Invitations
      summary: Add invitation
      description: Invite users through their email.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/type'
                accepter:
                  $ref: '#/components/schemas/accepter'
              required:
                - type
                - accepter 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Invitation info
                properties:
                  id: 
                    type: integer
                  token: 
                    type: string
                  inviter: 
                    type: string
                  accepter: 
                    type: string
                  type: 
                    type: string
                  invite_time: 
                    type: string
                  accept_time: 
                    type: string
                  expire_time: 
                    type: string
                example: {
                    "id": 33,
                    "token": "03e75cc0340a4fa4a35de057165d6a49",
                    "inviter": "9b4393c623c74243b0ad43709701687d@auth.local",
                    "accepter": "Seafile@example.com",
                    "type": "guest",
                    "invite_time": "2024-03-14T13:38:29+08:00",
                    "accept_time": "",
                    "expire_time": "2024-03-17T13:38:29+08:00"
                }

  /api/v2.1/invitations/batch/:
    post:
      tags:
        - Invitations
      summary: Batch add invitations
      description: The current user can batch invite users by using multiple email. Return the successful invitation message and the reason for the failure.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/type'
                accepter:
                  $ref: '#/components/schemas/batch_accepter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  failed:
                    type: array
                    items: 
                      type: object
                      description: Error message
                      properties:
                        email: 
                          type: string
                        error_msg:
                          type: string
                  success: 
                    type: object
                    description: Invitation info
                    properties:
                      id: 
                        type: integer
                      token: 
                        type: string
                      inviter: 
                        type: string
                      accepter: 
                        type: string
                      type: 
                        type: string
                      invite_time: 
                        type: string
                      accept_time: 
                        type: string
                      expire_time: 
                        type: string
                example: {
                  "failed": [
                      {
                          "email": "Seahub@example.com",
                          "error_msg": "Seahub@example.com is already invited."
                      }
                  ],
                  "success": [
                      {
                          "id": 34,
                          "token": "475a288e2fa64607bb81937c624ab756",
                          "inviter": "9b4393c623c74243b0ad43709701687d@auth.local",
                          "accepter": "Seafile@example.com",
                          "type": "guest",
                          "invite_time": "2024-03-14T13:53:44+08:00",
                          "accept_time": "",
                          "expire_time": "2024-03-17T13:53:44+08:00"
                      }
                  ]
                    }

  /api/v2.1/invitations/{invitation_token}/:
    get:
      tags:
        - Invitations
      summary: Get invitation
      description: Returns the specified invitation information.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/invitation_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Invitation info
                properties:
                  id: 
                    type: integer
                  token: 
                    type: string
                  inviter: 
                    type: string
                  accepter: 
                    type: string
                  type: 
                    type: string
                  invite_time: 
                    type: string
                  accept_time: 
                    type: string
                  expire_time: 
                    type: string

                example: {
                  "id": 34,
                  "token": "475a288e2fa64607bb81937c624ab756",
                  "inviter": "9b4393c623c74243b0ad43709701687d@auth.local",
                  "accepter": "11@qq.com",
                  "type": "guest",
                  "invite_time": "2024-03-14T13:53:44+08:00",
                  "accept_time": "",
                  "expire_time": "2024-03-17T13:53:44+08:00"
                      }

    delete:
      tags:
        - Invitations
      summary: Delete invitation
      description: Cancel the invitation message that has been sent.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/invitation_token'
      responses:
        '200':
          description: OK

  /api/v2.1/invitations/{invitation_token}/revoke/:
    delete:
      tags:
        - Invitations
      summary: Revoke invitation
      description: Revoke invitation when the accepter successfully creates an account. And set the account to inactive.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/invitation_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  /api2/default-repo/:
    get:
      tags:
        - Libraries
      summary: Get default library
      description: Returns the id of the default library.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Library information
                properties:
                  exists: 
                    type: boolean
                  repo_id: 
                    type: string
              example:
                exists: true
                repo_id: "eaa2b714-7993-4abc-93ce-56286d45d3de"

    post:
      tags:
        - Libraries
      summary: Create default library
      description: If a default library exists, the library ID is obtained, and if not, a default library is created.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Library information
                properties:
                  exists: 
                    type: boolean
                  repo_id: 
                    type: string
              example:
                exists: true,
                repo_id: "eaa2b714-7993-4abc-93ce-56286d45d3de"


  /api2/repos/:
    get:
      tags:
        - Libraries
      summary: List libraries/Search library by name
      description: |- 
        Returns all eligible library information.
        *Note: If no type parameter contained in the url, this api will return all libraries user can access.*
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/library_type'
        - $ref: '#/components/parameters/nameContains'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    type:
                      type: string
                      description: |
                        The `type` field in the response indicates the type of library:
                        - `repo`: Libraries owned by the user.
                        - `srepo`: Libraries shared with the user.
                        - `grepo`: Group libraries or libraries shared with all users.
                    id: 
                      type: string
                    owner: 
                      type: string
                    onwer_name: 
                      type: string
                    owner_contact_email: 
                      type: string
                    name: 
                      type: string
                    mtime: 
                      type: number
                    modifier_contact_email:
                      type: string
                    modifier_email:
                      type: string
                    modifier_name:
                      type: string
                    mtime_relative: 
                      type: string
                    size: 
                      type: integer
                    size_formatted: 
                      type: string
                    encrypted: 
                      type: boolean
                    permission: 
                      type: string
                    virtual: 
                      type: boolean
                    root: 
                      type: string
                    head_commit_id:
                      type: string
                    version:
                      type: integer
                    salt: 
                      type: string
                example: [
                      {
                          "type": "repo",
                          "id": "d5620899-1e9b-4a8c-b9af-b00a26324407",
                        "owner": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "owner_name": "syq",
                        "owner_contact_email": "daniel@example.com",
                        "name": "reply",
                        "mtime": 1709560091,
                        "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "modifier_contact_email": "daniel@example.com",
                        "modifier_name": "syq",
                        "mtime_relative": "<time datetime=\"2024-03-04T21:48:11\" is=\"relative-time\" title=\"Mon, 04 Mar 2024 21:48:11 +0800\" >12 hours ago</time>",
                        "size": 2483389,
                        "size_formatted": "2.4 MB",
                        "encrypted": false,
                        "permission": "rw",
                        "virtual": false,
                        "root": "",
                        "head_commit_id": "5e9ef6db4105cdc44dc5270da3f55a3036970d42",
                        "version": 1,
                        "salt": ""
                    }
                   ]

    post:
      tags:
        - Libraries
      summary: Create (Encrypted) library
      description: Response code 200 and newly created library information are returned.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_operation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Library information
                properties:
                  relay_id: 
                    type: string
                  relay_addr: 
                    type: string
                  relay_port: 
                    type: string
                  email: 
                    type: string
                  token: 
                    type: string
                  repo_id: 
                    type: string
                  repo_name: 
                    type: string
                  repo_desc: 
                    type: string
                  repo_size: 
                    type: integer
                  repo_size_formatted: 
                    type: string
                  mtime: 
                    type: string
                  mtime_relative: 
                    type: string
                  encrypted: 
                    type: integer
                  enc_version: 
                    type: integer
                  salt: 
                    type: string
                  magic: 
                    type: string
                  random_key: 
                    type: string
                  repo_version: 
                    type: integer
                  head_commit_id: 
                    type: string
                  permission: 
                    type: string   
              examples:
                Create Library:
                  value: {
                    "relay_id": "44e8f253849ad910dc142247227c8ece8ec0f971",
                    "relay_addr": "127.0.0.1",
                    "relay_port": "80",
                    "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                    "token": "89661286502d98af109f30bb54b63a4b587e5e60",
                    "repo_id": "6d833ca8-392e-4dbf-8f4f-af4895fff121",
                    "repo_name": "test",
                    "repo_desc": "",
                    "repo_size": 0,
                    "repo_size_formatted": "0 bytes",
                    "mtime": 1709609851,
                    "mtime_relative": "<time datetime=\"2024-03-05T11:37:31\" is=\"relative-time\" title=\"Tue, 05 Mar 2024 11:37:31 +0800\" >Just now</time>",
                    "encrypted": 1,
                    "enc_version": 2,
                    "salt": "",
                    "magic": "bc184948365cf90d211b53a82d5cc0c1921eb757788527e0be09c4d7ca22d0cf",
                    "random_key": "0fb038875aa44237db4a7567facf02397fbe2cc890ddcf244af97632510dcab042500a15848bdc326ff3289f48d18afe",
                    "repo_version": 1,
                    "head_commit_id": "4875e1352495c8248349b47619718597e7b3a6ab",
                    "permission": "rw"
                  }
                Create Encrypted Library: 
                  value: {'email': u'Seafile@lian.com',
                        'enc_version': 2,
                        'encrypted': 1,
                        'head_commit_id': u'822e90c1ad6d1c28aa9656f7429f20e05a38e0c6',
                        'magic': u'06d3cc794f7a18ad5b20d0cb279ebb347b39b555d22adc3e3e09f3312965b134',
                        'mtime': 1558337264,
                        'mtime_relative': u'<time datetime="2024-03-18T07:27:44" is="relative-time" title="Mon, 20 May 2019 07:27:44 +0000" >Just now</time>',
                        'random_key': u'c2db23a18735962eb0ebbf6ae0665979bf22f0232976b913dab8f2851930039285009287154c08c3de11ab53348e63b4',
                        'relay_addr': '127.0.0.1',
                        'relay_id': u'ba789883abf9e65d8fb91b85635bb0485b3548e6',
                        'relay_port': 10001,
                        'repo_desc': u'dist',
                        'repo_id': u'7914e90a-c34e-4fe9-9497-4cec4ce708f9',
                        'repo_name': u'dist',
                        'repo_size': 0,
                        'repo_size_formatted': u'0\xa0bytes',
                        'repo_version': 1,
                        'salt': '',
                        'token': u'cc7a4f953c5dd27c8e6021017273513c5c47815f'}


  /api2/repos/{repo_id}/:
    get:
      tags:
        - Libraries
      summary: Get library info
      description: Returns basic information about the specified library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Library info
                properties:
                  type: 
                    type: string
                  id: 
                    type: string
                  owner: 
                    type: string
                  name: 
                    type: string
                  mtime: 
                    type: string
                  size: 
                    type: string
                  encrypted: 
                    type: string
                  root: 
                    type: string
                  permission: 
                    type: string
                  modifier_email: 
                    type: string
                  modifier_contact_email: 
                    type: string
                  modifier_name: 
                    type: string
                  file_count: 
                    type: string
                  head_commit_id: 
                    type: string
                  enc_version: 
                    type: string
                  salt: 
                    type: string
                  magic: 
                    type: string
                  random_key: 
                    type: string
              examples:
                For normal library:
                  value:
                    type: "repo"
                    id: "f02212a2-a899-403c-93b7-334dffb8ea6e"
                    owner: "self"
                    name: "python"
                    mtime: 1709537557
                    size: 7839
                    encrypted: false
                    root: "abddbda4e1315a4d2ed671194a47fad34637e4f2"
                    permission: "rw"
                    modifier_email: "77a423e4804a4d7ca1ec78a150d71229@auth.local"
                    modifier_contact_email: "daniel@example.com"
                    modifier_name: "test"
                    file_count: 2
                    head_commit_id: "1afe67b9bb1816912d496412c6076316937da58c"
                For encrypted library:
                  value:
                    {
                    "type": "repo",
                    "id": "6d833ca8-392e-4dbf-8f4f-af4895fff121",
                    "owner": "self",
                    "name": "test",
                    "mtime": 1709609851,
                    "size": 0,
                    "encrypted": true,
                    "root": "0000000000000000000000000000000000000000",
                    "permission": "rw",
                    "modifier_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                    "modifier_contact_email": "daniel@example.com",
                    "modifier_name": "test",
                    "file_count": 0,
                    "head_commit_id": "4875e1352495c8248349b47619718597e7b3a6ab",
                    "enc_version": 2,
                    "salt": "",
                    "magic": "bc184948365cf90d211b53a82d5cc0c1921eb757788527e0be09c4d7ca22d0cf",
                    "random_key": "0fb038875aa44237db4a7567facf02397fbe2cc890ddcf244af97632510dcab042500a15848bdc326ff3289f48d18afe"
                  }

    post:
      tags:
        - Libraries
      summary: Rename/Decrypt library
      description: Decrypt or rename the library. To rename the library, pass the `op` parameter
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/op'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/library_operation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: string
                description: Returns a 'success' string
                example: success

    delete:
      tags:
        - Libraries
      summary: Delete library
      description: Delete an existing library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: string
                description: Returns a 'success' string
                example: success

  /api2/repos/{repo_id}/owner/:
    get:
      tags:
        - Libraries
      summary: Get library owner
      description: Returns the owner email of the specified library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  owner: 
                    type: string
                    description: Email
              example:
                {"owner": "77a423e4804a4d7ca1ec78a150d71229@auth.local"}

    put:
      tags:
        - Libraries
      summary: Transfer library
      description: Transfer library to user.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  $ref: '#/components/schemas/repo_owner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

  /api/v2.1/repos/{repo_id}/history/:
    get:
      tags:
        - Libraries
      summary: Get library history
      description: Returns all the history of the library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per_page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  data: 
                    type: array
                    description: Returns all historical operations
                    items: 
                      type: object
                      description: Operational info
                      properties:
                        email: 
                          type: string
                        name: 
                          type: string
                        contact_email: 
                          type: string
                        time: 
                          type: string
                        commit_id: 
                          type: string
                        description: 
                          type: string
                        client_version: 
                          type: string
                        device_name: 
                          type: string
                        second_parent_id: 
                          type: string
                        tags: 
                          type: string
                  more: 
                    type: boolean

                example:  {
                  "data": [
                      {
                          "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "name": "Seafile",
                          "contact_email": "daniel@example.com",
                          "time": "2024-03-11T15:05:37+08:00",
                          "commit_id": "f8d665f9338ab8ec25ee064f2f3fcadad4c6c0b5",
                          "description": "Deleted \"222\"",
                          "client_version": null,
                          "device_name": null,
                          "second_parent_id": null,
                          "tags": []
                      },
                      {
                          "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "name": "Seafile",
                          "contact_email": "daniel@example.com",
                          "time": "2024-03-11T14:41:36+08:00",
                          "commit_id": "8def9edbc1e78b1c4b4a41796a76a54f2b36da59",
                          "description": "Deleted \"111\"",
                          "client_version": null,
                          "device_name": null,
                          "second_parent_id": null,
                          "tags": []
                      }],
                         "more": false
                         }

  /api2/repos/{repo_id}/history-limit/:
    get:
      tags:
        - Libraries
      summary: Get library history limit days
      description: By calling this interface you can get the history storage period of the specified library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  keep_days:
                    type: integer
                    description: Storage time
                example:
                  {"keep_days": 60}

    put:
      tags:
        - Libraries
      summary: Set library history limit days
      description: Using this interface you can set the history storage period of a specified library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keep_days:
                  $ref: '#/components/schemas/keep_days'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  keep_days:
                    type: integer
                    description: Storage time
                example:
                  {"keep_days": 8}


  /api/v2.1/repos/{repo_id}/trash/:
    get:
      tags:
        - Libraries
      summary: Get library trash
      description: Gets information about all files or folders in the specified library trash.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/path_in_query'
        - $ref: '#/components/parameters/show_days'
        - $ref: '#/components/parameters/scan_stat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  data: 
                    type: array
                    description: All files in the recycle bin.
                    items: 
                      type: object
                      description: File info
                      properties:
                        parent_dir: 
                          type: string
                        obj_name: 
                          type: string
                        deleted_time: 
                          type: string
                        scan_stat: 
                          type: string
                        commit_id: 
                          type: string
                        is_dir: 
                          type: boolean
                        size: 
                          type: integer
                        obj_id: 
                          type: string
                  more: 
                    type: boolean
                  scan_stat: 
                    type: object
                example: 
                  {
                    "data": [
                          {
                              "parent_dir": "/",
                              "obj_name": "test.pptx",
                              "deleted_time": "2024-03-05T15:11:29+08:00",
                              "scan_stat": null,
                              "commit_id": "9ddc5bb951a91e1f761d37f74620231ce5c8604c",
                              "is_dir": false,
                              "size": 34707,
                              "obj_id": "36ad147552afe49ad0cf60754d0ed4e61efe35d1"
                          }
                      ],
                      "more": false,
                      "scan_stat": null
                      }

    delete:
      tags:
        - Libraries
      summary: Clean library trash
      description: Clear all files from the trash in the specified library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success state

  /api/v2.1/repos/{repo_id}/commits/{commit_id}/:
    get:
      tags:
        - Libraries
      summary: Get library commit info
      description: Get library commit info
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/commit_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  commit_info: 
                    type: object
                    description: Commit info
                    properties:
                      description: 
                        type: string
                      creator_name: 
                        type: string
                      creator_email: 
                        type: string
                      device_name: 
                        type: string
                      time: 
                        type: string
                      creator_contact_email: 
                        type: string
                  commit_diffs: 
                    type: array
                    items:
                      type: object
                      description: Commit diffs
                      properties:
                        op_type: 
                          type: string
                        path: 
                          type: string
                        new_path: 
                          type: string
                example: {
                  "commit_info": {
                      "description": "Added or modified \"1.md\" and 2 more files.\nDeleted \"default.jpeg\".\nRenamed \"123.umind\" and 1 more files.\nAdded \"789\" and 1 more directories.\nRemoved directory \"456\".\n",
                      "creator_name": "lian-name",
                      "creator_email": "lian@lian.com",
                      "device_name": "lian mac pro work",
                      "time": "2024-03-4T10:17:03+08:00",
                      "creator_contact_email": "lian@lian.com"
                  },
                  "commit_diffs": [
                      {
                          "op_type": "renamed",
                          "path": "/123/123.umind",
                          "new_path": "/123/123.umind copy"
                      },
                      {
                          "op_type": "renamed",
                          "path": "/d0efd88ejw1f6vqsjmjh9j20c846i4i6.jpg",
                          "new_path": "/123.jpg"
                      },
                      {
                          "op_type": "modified",
                          "path": "/123/1.md",
                          "new_path": ""
                      },
                      {
                          "op_type": "deldir",
                          "path": "/123/456",
                          "new_path": ""
                      },
                      {
                          "op_type": "newdir",
                          "path": "/123/789",
                          "new_path": ""
                      },
                      {
                          "op_type": "newdir",
                          "path": "/abd",
                          "new_path": ""
                      },
                      {
                          "op_type": "removed",
                          "path": "/default.jpeg",
                          "new_path": ""
                      },
                      {
                          "op_type": "new",
                          "path": "/departments copy.md",
                          "new_path": ""
                      },
                      {
                          "op_type": "modified",
                          "path": "/info.md",
                          "new_path": ""
                      }
                  ]
                }
  /api2/repos/{repo_id}/dir/shared_items/: 
    get: 
      tags:
        - List share
      summary: List shared users/groups of a library
      description: 'Return shared information of the library'
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p_library'
        - $ref: '#/components/parameters/share_type_libraries'
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                oneOf:
                  - $ref: '#/components/schemas/share_type_user'
                  - $ref: '#/components/schemas/share_type_group'
              examples: 
                user: 
                  value:  [
                    {
                        "share_type": "user",
                        "user_info": {
                            "name": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                            "nickname": "Seafile",
                            "contact_email": "daniel@example.com",
                            "avatar_url": "https://cloud.seafile.com/media/avatars/e/6/f489f6bea362e91740fd7a3a111800/resized/72/1672a4ff48124e6ada03a4414518cf4a_sB3MR0n.png"
                        },
                        "permission": "rw",
                        "is_admin": false
                    }
                           ]
                group: 
                  value: [
                        {
                            "share_type": "group",
                            "group_info": {
                                "id": 3493,
                                "name": "group-t"
                            },
                            "permission": "r",
                            "is_admin": false
                        },
                        {
                            "share_type": "group",
                            "group_info": {
                                "id": 3483,
                                "name": "group-s"
                            },
                            "permission": "rw",
                            "is_admin": false
                        }
                    ]

    put: 
      tags:
        - Share to user/group
      summary: Share a library to user/group
      description: Share the current user's existing library with another user or group.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p_library'
      requestBody: 
        content:
          multipart/form-data:
            schema: 
              $ref: '#/components/schemas/share_operation'
      responses:
        '200':
          description: OK  
          content:
            application/json:
              schema: 
                oneOf:
                  - $ref: '#/components/schemas/share_r_user'
                  - $ref: '#/components/schemas/share_r_group'  
              examples:
                User: 
                  value: {
                    "failed": [{"email": "invalid@email.com", "error_msg": "User invalid@email.com not found."}],
                    "success": [
                        {
                            "share_type": "user",
                            "user_info": {
                                "name": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                                "nickname": "Seafile",
                                "contact_email": "daniel@example.com",
                                "avatar_url": "https://cloud.seafile.com/media/avatars/e/6/f489f6bea362e91740fd7a3a111800/resized/72/1672a4ff48124e6ada03a4414518cf4a_4LiwkY9.png"
                            },
                            "permission": "r",
                            "is_admin": false
                        }
                    ]
                   }
                Group: 
                  value: {
                    "failed": [],
                    "success": [
                        {
                            "share_type": "group",
                            "group_info": {
                                "id": 3479,
                                "name": "new_group"
                            },
                            "permission": "r",
                            "is_admin": false
                        }
                    ]
                    }

    delete: 
      tags:
        - Share to user/group
      summary: Unshare a library from user/group
      description: |- 
        Unshare a library from user/group.
        *Note: Select parameter username for users and parameter group_id for groups*
      security:
        - AccountTokenAuth: []
      parameters:
          - $ref: '#/components/parameters/repo_id'
          - $ref: '#/components/parameters/p_library'
          - $ref: '#/components/parameters/share_type_libraries'
          - $ref: '#/components/parameters/username'
          - $ref: '#/components/parameters/group_id_query'
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

    post: 
      tags:
        - Share to user/group
      summary: Update user share permission of a library
      description: |- 
          Update user share permission of a library.
          *Note: Select parameter username for users and parameter group_id for groups*
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/p_library'
        - $ref: '#/components/parameters/share_type_libraries'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/group_id_query'
      requestBody: 
        content:
          application/json:
            schema: 
              type: object
              properties:
                permission: 
                  type: string
                  description: r or rw
                  example: r
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state
                  

  /api2/server-info/:
    get:
      tags:
        - Server info
      summary: Get server information
      description: Use this anonymous call to retrieve the current Seafile server version information. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Server info
                properties:
                  version:
                    type: string
                  encrypted_library_version:
                    type: integer
                  features:
                    type: array
                    items:
                      type: string
                example:
                  version: '10.0'
                  encrypted_library_version: 2
                  features: [
                    seafile-basic,
                  ]

  /api/v2.1/share-links/:
    get:
      tags:
        - Share links
      summary: List all share links
      description: This api will list all folder/file download share links in all libraries created by user.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  description: Share links info
                  properties:
                    username: 
                      type: string
                    repo_id: 
                      type: string
                    repo_name: 
                      type: string
                    path: 
                      type: string
                    obj_name: 
                      type: string
                    is_dir: 
                      type: boolean
                    token: 
                      type: string
                    link: 
                      type: string
                    view_cnt: 
                      type: integer
                    ctime: 
                      type: string
                    expire_date: 
                      type: string
                    is_expired: 
                      type: boolean
                    permissions: 
                      type: array
                      items: 
                        type: object
                        properties:
                          can_edit:
                            type: boolean
                          can_download: 
                            type: boolean
                          can_upload: 
                            type: boolean
                    password: 
                      type: string
                    repo_folder_permission: 
                      type: string   
              example: [
                  {
                      "username": "admin@seafile.com",
                      "repo_id": "4150d508-9014-413d-b1d5-3f0cc9d28e64",
                      "repo_name": "test",
                      "path": "/folder/",
                      "obj_name": "folder",
                      "is_dir": true,
                      "token": "2620b6669751447cac90",
                      "link": "https://demo.seafile.top/d/2620b6669751447cac90/",
                      "view_cnt": 0,
                      "ctime": "2024-03-14T11:39:21+08:00",
                      "expire_date": "2024-04-03T11:39:20+08:00",
                      "is_expired": false,
                      "permissions": {
                          "can_edit": false,
                          "can_download": true,
                          "can_upload": false
                      },
                      "password": "",
                      "repo_folder_permission": "rw"
                  },
                  {
                      "username": "admin@seafile.com",
                      "repo_id": "4150d508-9014-413d-b1d5-3f0cc9d28e64",
                      "repo_name": "test",
                      "path": "/folder/",
                      "obj_name": "folder",
                      "is_dir": true,
                      "token": "626cd61fba99415c86a0",
                      "link": "https://demo.seafile.top/d/626cd61fba99415c86a0/",
                      "view_cnt": 0,
                      "ctime": "2024-03-14T11:39:21+08:00",
                      "expire_date": "2024-04-03T11:39:20+08:00",
                      "is_expired": false,
                      "permissions": {
                          "can_edit": false,
                          "can_download": true,
                          "can_upload": false
                      },
                      "password": "",
                      "repo_folder_permission": "rw"
                  }
                  
              ]

    post: 
      tags:
        - Share links
      summary: Create share link
      description: Create a shared link for the library with specific permissions.
      security:
        - AccountTokenAuth: []
      requestBody: 
        description: Content type of parameter must be application/json and passed through POST request's body.
        content:
          application/json:
            schema:
              type: object
              properties:
                repo_id:
                  $ref: '#/components/schemas/repo_id'
                path: 
                  $ref: '#/components/schemas/path'
                password: 
                  $ref: '#/components/schemas/password'
                expire_days: 
                  $ref: '#/components/schemas/expire_days'
                permissions: 
                  $ref: '#/components/schemas/share_link_permission'
              required:
                - repo_id
                - path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                description: Share links info
                properties:
                  username: 
                      type: string
                  repo_id: 
                    type: string
                  repo_name: 
                    type: string
                  path: 
                    type: string
                  obj_name: 
                    type: string
                  is_dir: 
                    type: boolean
                  token: 
                    type: string
                  link: 
                    type: string
                  view_cnt: 
                    type: integer
                  ctime: 
                    type: string
                  expire_date: 
                    type: string
                  is_expired: 
                    type: boolean
                  permissions: 
                    type: array
                    items: 
                      type: object
                      properties:
                        can_edit:
                          type: boolean
                        can_download: 
                          type: boolean
                        can_upload: 
                          type: boolean
                  password: 
                    type: string
                  can_edit:
                    type: boolean
                example: {
                    "username": "admin@seafile.com",
                    "repo_id": "4150d508-9014-413d-b1d5-3f0cc9d28e64",
                    "repo_name": "test",
                    "path": "/folder/",
                    "obj_name": "folder",
                    "obj_id": "fe9d9a3af10f1a36d7ae62fc29864ad080f73182",
                    "is_dir": true,
                    "token": "1139135e70f840c59ad8",
                    "link": "https://demo.seafile.top/d/1139135e70f840c59ad8/",
                    "view_cnt": 0,
                    "ctime": "2024-03-14T15:03:32+08:00",
                    "expire_date": "2024-04-03T15:03:32+08:00",
                    "is_expired": false,
                    "permissions": {
                        "can_edit": false,
                        "can_download": false,
                        "can_upload": false
                    },
                    "password": "",
                    "can_edit": false
                   }
          
  /api/v2.1/share-links/?repo_id={repo_id}:
    get:
      tags:
        - Share links
      summary: List share links of a library
      description: List all folder/file download share links in a specific library.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  description: Share links info
                  properties:
                    username: 
                      type: string
                    repo_id: 
                      type: string
                    repo_name: 
                      type: string
                    path: 
                      type: string
                    obj_name: 
                      type: string
                    is_dir: 
                      type: boolean
                    token: 
                      type: string
                    link: 
                      type: string
                    view_cnt: 
                      type: integer
                    ctime: 
                      type: string
                    expire_date: 
                      type: string
                    is_expired: 
                      type: boolean
                    permissions: 
                      type: array
                      items: 
                        type: object
                        properties:
                          can_edit:
                            type: boolean
                          can_download: 
                            type: boolean
                          can_upload: 
                            type: boolean
                    password: 
                      type: string
                    repo_folder_permission: 
                      type: string   
              example: [
                  {
                      "username": "admin@seafile.com",
                      "repo_id": "4150d508-9014-413d-b1d5-3f0cc9d28e64",
                      "repo_name": "test",
                      "path": "/folder/",
                      "obj_name": "folder",
                      "is_dir": true,
                      "token": "2620b6669751447cac90",
                      "link": "https://demo.seafile.top/d/2620b6669751447cac90/",
                      "view_cnt": 0,
                      "ctime": "2024-03-14T11:39:21+08:00",
                      "expire_date": "2024-04-03T11:39:20+08:00",
                      "is_expired": false,
                      "permissions": {
                          "can_edit": false,
                          "can_download": true,
                          "can_upload": false
                      },
                      "password": "",
                      "repo_folder_permission": "rw"
                  },
                  {
                      "username": "admin@seafile.com",
                      "repo_id": "4150d508-9014-413d-b1d5-3f0cc9d28e64",
                      "repo_name": "test",
                      "path": "/folder/",
                      "obj_name": "folder",
                      "is_dir": true,
                      "token": "626cd61fba99415c86a0",
                      "link": "https://demo.seafile.top/d/626cd61fba99415c86a0/",
                      "view_cnt": 0,
                      "ctime": "2024-03-14T11:39:21+08:00",
                      "expire_date": "2024-04-03T11:39:20+08:00",
                      "is_expired": false,
                      "permissions": {
                          "can_edit": false,
                          "can_download": true,
                          "can_upload": false
                      },
                      "password": "",
                      "repo_folder_permission": "rw"
                  }
                  
              ]

  /api/v2.1/share-links/?repo_id={repo_id}&path={path}:
    get:
      tags:
        - Share links
      summary: List share link of a folder (file)
      description: List download share link info of a specific folder/file.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  description: Share links info
                  properties:
                    username: 
                      type: string
                    repo_id: 
                      type: string
                    repo_name: 
                      type: string
                    path: 
                      type: string
                    obj_name: 
                      type: string
                    is_dir: 
                      type: boolean
                    token: 
                      type: string
                    link: 
                      type: string
                    view_cnt: 
                      type: integer
                    ctime: 
                      type: string
                    expire_date: 
                      type: string
                    is_expired: 
                      type: boolean
                    permissions: 
                      type: array
                      items: 
                        type: object
                        properties:
                          can_edit:
                            type: boolean
                          can_download: 
                            type: boolean
                          can_upload: 
                            type: boolean
                    password: 
                      type: string
                    repo_folder_permission: 
                      type: string   
                  
                  example: [
                    {
                        "username": "admin@seafile.com",
                        "repo_id": "4150d508-9014-413d-b1d5-3f0cc9d28e64",
                        "repo_name": "test",
                        "path": "/folder/file",
                        "obj_name": "file",
                        "is_dir": false,
                        "token": "135d32eb8cc946c182d0",
                        "link": "https://demo.seafile.top/f/135d32eb8cc946c182d0/",
                        "view_cnt": 0,
                        "ctime": "2024-03-14T14:32:28+08:00",
                        "expire_date": "2024-04-03T14:32:27+08:00",
                        "is_expired": false,
                        "permissions": {
                            "can_edit": false,
                            "can_download": true,
                            "can_upload": false
                        },
                        "password": "",
                        "repo_folder_permission": "rw"
                    }
                   ]

  /api/v2.1/share-links/{token}/:
    delete:
      tags:
        - Share links
      summary: Delete share link
      description: Remove the share link
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/share_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

  /api2/send-share-link/:
    post: 
      tags:
        - Share links
      summary: Send share link email
      description: Sends the generated share link to the specified user.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema: 
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/token'
                email: 
                  $ref: '#/components/schemas/email'
                extra_msg:
                  $ref: '#/components/schemas/extra_msg'
              required:
                - token
                - email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items: 
                      type: object
                      description: Error message
                      properties:
                        email: 
                          type: string
                        error_msg:
                          type: string
                  success: 
                    type: array
                    description: Return some successful eamil
                    items: 
                      type: string
                example:  {
                  "failed": [
                      {
                          "email": "invalid-email",
                          "error_msg": "email invalid."
                      }
                  ],
                  "success": [
                      "sample@eamil.com"
                  ]
                 }

  /api2/d/{token}/dir/: 
    get: 
      tags:
        - Share links
      summary: List items in folder download link
      description: Lists all items under the specified path in the shared link.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/upload_link_token'
        - $ref: '#/components/parameters/share_path'
        - $ref: '#/components/parameters/password'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  description: File info
                  properties:
                    size: 
                      type: integer
                    type: 
                      type: string
                    name: 
                      type: string
                    id: 
                      type: string
                    mtime: 
                      type: number
                example: [
                      {
                          "size": 0,
                          "type": "file",
                          "name": "test.md",
                          "id": "0000000000000000000000000000000000000000",
                          "mtime": 1710404571
                      }
                    ]

  /api/v2.1/share-links/{token}/dirents/:
    get: 
      tags:
        - Share links
      summary: List direntry in dir download link
      description: Lists all direntry under the specified path in the shared link.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/folder_link_token'
        - $ref: '#/components/parameters/share_path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  dirent_list: 
                    type: array
                    items: 
                      type: object
                      properties:
                        size: 
                          type: integer
                        last_modified: 
                          type: string
                        is_dir: 
                          type: boolean
                        file_path: 
                          type: string
                        file_name: 
                          type: string
              example: {
                  "dirent_list": [
                      {
                          "size": 0,
                          "last_modified": "2024-03-14T16:22:51+08:00",
                          "is_dir": false,
                          "file_path": "/test.md",
                          "file_name": "test.md"
                      }
                  ]
                    }

  /api/v2.1/repos/{repo_id}/commits/{commit_id}/dir/: 
     get: 
      tags:
        - Snapshot
      summary: List items in directory of a snapshot
      description: |-
         Returns all items in the snapshot directory, 
         *Note:Used in Snapshot and Trash.*
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/commit_id'
        - $ref: '#/components/parameters/path_query_folder'
      responses:
        '200':
          description: OK
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  dirent_list: 
                    type: array
                    items: 
                      type: object
                      description: Items info
                      properties:
                        type: 
                          type: string
                        size: 
                          type: string
                        parent_dir: 
                          type: string
                        obj_id: 
                          type: string
                        name: 
                          type: string
                example: {
                  "dirent_list": [
                      {
                          "type": "dir",
                          "parent_dir": "/",
                          "obj_id": "88f77abc97effe050e61ae07af470ff801f16e43",
                          "name": "test"
                      },
                      {
                          "type": "file",
                          "size": 0,
                          "parent_dir": "/",
                          "obj_id": "0000000000000000000000000000000000000000",
                          "name": "test.md"
                      }
                  ]
                  }

  /api/v2.1/repos/{repo_id}/commits/{commit_id}/revert/:
    post: 
      tags:
        - Snapshot
      summary: Revert library to a snapshot
      description:  |- 
        Restore the library to a snapshot
        *Note: Only library owner can revert.*
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/commit_id'
      responses:
        '200':
          description: OK
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

  /api/v2.1/revision-tags/tag-names/: 
    get: 
        tags:
          - Snapshot label
        summary: Get snapshot label
        description:  Returns all snapshot tags for the current user.
        security:
          - AccountTokenAuth: []
        responses:
          '200':
            description: OK
            content:
              application/json: 
                schema: 
                  type: array
                  items: 
                    type: string
                    description: 'Tag name' 
                  example: [
                      "v1",
                      "v2",
                      "test",
                      "qwe_-.12",
                      "qwe_-1.",
                      "r",
                      "\u4e2d\u6587",
                      "\u82f1\u6587"
                  ]

  /api/v2.1/revision-tags/tagged-items/:
    post: 
        tags:
          - Snapshot label
        summary: Create snapshot label
        description: Create a new snapshot label.
        security:
          - AccountTokenAuth: []
        requestBody: 
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo_id:
                    $ref: '#/components/schemas/repo_id'
                  commit_id:
                    $ref: '#/components/schemas/commit_id'
                  tag_names: 
                     $ref: '#/components/schemas/tag_names'
                required:
                  - repo_id
                  - tag_names 
        responses:
          '200':
            description: OK
            content:
              application/json:
               schema: 
                  type: object
                  properties:
                    revisionTags: 
                      type: array
                      items: 
                        type: object
                        description: Tag info
                        properties:
                          tag: 
                            type: string
                          tag_creator: 
                            type: string
                          revision: 
                            type: object
                            description: revision info
                            properties:
                              repo_id: 
                                type: string
                              commit_id: 
                                type: string
                              email: 
                                type: string
                              name: 
                                type: string
                              contact_email: 
                                type: string
                              time: 
                                type: string
                              description: 
                                type: string
                              link: 
                                type: string
                  example: {
                    "revisionTags": [
                        {
                            "tag": "v1",
                            "tag_creator": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                            "revision": {
                                "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                                "commit_id": "c817a1b23786f67f853c534d5fec046f61a7067d",
                                "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                                "name": "Seafile",
                                "contact_email": "Seafile@example.com",
                                "time": "2024-03-13T15:38:33+08:00",
                                "description": "Added directory \"test\"",
                                "link": "/repo/history/view/4e6ff511-deb2-4373-8377-c0ce247e6387/?commit_id=c817a1b23786f67f853c534d5fec046f61a7067d"
                            }
                        },
                        {
                            "tag": "v2",
                            "tag_creator": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                            "revision": {
                                "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                                "commit_id": "c817a1b23786f67f853c534d5fec046f61a7067d",
                                "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                                "name": "Seafile",
                                "contact_email": "Seafile@example.com",
                                "time": "2024-03-13T15:38:33+08:00",
                                "description": "Added directory \"test\"",
                                "link": "/repo/history/view/4e6ff511-deb2-4373-8377-c0ce247e6387/?commit_id=c817a1b23786f67f853c534d5fec046f61a7067d"
                            }
                        }
                    ]
                   }

    put: 
        tags:
          - Snapshot label
        summary: Update snapshot label
        description: Update the snapshot label in the history.
        security:
          - AccountTokenAuth: []
        requestBody: 
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo_id:
                    $ref: '#/components/schemas/repo_id'
                  commit_id:
                    $ref: '#/components/schemas/commit_id'
                    description: default is head commit if commit_id is empty
                  tag_names: 
                     $ref: '#/components/schemas/tag_names'
                required:
                  - repo_id
                  - tag_names 
        responses:
          '200':
            description: OK
            content:
              application/json: 
                schema: 
                  type: object
                  properties:
                    revisionTags: 
                      type: array
                      items: 
                        type: object
                        description: Tag info
                        properties:
                          tag: 
                            type: string
                          tag_creator: 
                            type: string
                          revision: 
                            type: object
                            description: revision info
                            properties:
                              repo_id: 
                                type: string
                              commit_id: 
                                type: string
                              email: 
                                type: string
                              name: 
                                type: string
                              contact_email: 
                                type: string
                              time: 
                                type: string
                              description: 
                                type: string
                              link: 
                                type: string
                  example: {
                      "revisionTags": [
                          {
                              "tag": "v5",
                              "tag_creator": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                              "revision": {
                                  "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                                  "commit_id": "c817a1b23786f67f853c534d5fec046f61a7067d",
                                  "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                                  "name": "Seafile",
                                  "contact_email": "Seafile@example.com",
                                  "time": "2024-03-13T15:38:33+08:00",
                                  "description": "Added directory \"test\"",
                                  "link": "/repo/history/view/4e6ff511-deb2-4373-8377-c0ce247e6387/?commit_id=c817a1b23786f67f853c534d5fec046f61a7067d"
                              }
                          },
                          {
                              "tag": "v6",
                              "tag_creator": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                              "revision": {
                                  "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                                  "commit_id": "c817a1b23786f67f853c534d5fec046f61a7067d",
                                  "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                                  "name": "Seafile",
                                  "contact_email": "Seafile@example.com",
                                  "time": "2024-03-13T15:38:33+08:00",
                                  "description": "Added directory \"test\"",
                                  "link": "/repo/history/view/4e6ff511-deb2-4373-8377-c0ce247e6387/?commit_id=c817a1b23786f67f853c534d5fec046f61a7067d"
                              }
                          }
                      ]
                  }

    delete: 
      tags:
        - Snapshot label
      summary: Delete snapshot label
      description: Delete the existing snapshot label of the current user.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id_query'
        - $ref: '#/components/parameters/tag_name'
      responses:
        '200':
          description: OK

  /api/v2.1/starred-items/: 
    get:
      tags:
        - Starred items
      summary: List starred items
      description: Returns all star items for the current user.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  starred_item_list: 
                    type: array
                    items: 
                      type: object
                      description: Starred items info
                      properties:
                        repo_id: 
                          type: string
                        repo_name: 
                          type: string
                        repo_encrypted: 
                          type: boolean
                        is_dir: 
                          type: boolean
                        path: 
                          type: string
                        obj_name: 
                          type: string
                        mtime: 
                          type: string
                        deleted: 
                          type: boolean
                        user_email: 
                          type: string
                        user_name: 
                          type: string
                        user_contact_email: 
                          type: string
                example: {
                  "starred_item_list": [
                      {
                          "repo_id": "00e4dad1-a804-4598-96de-b102109bb4ce",
                          "repo_name": "test",
                          "repo_encrypted": false,
                          "is_dir": true,
                          "path": "/",
                          "obj_name": "test",
                          "mtime": "2024-03-13T11:02:42+08:00",
                          "deleted": false,
                          "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "user_name": "Seafile",
                          "user_contact_email": "Seafile@example.com"
                      },
                      {
                          "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                          "repo_name": "111",
                          "repo_encrypted": false,
                          "is_dir": true,
                          "path": "/test/",
                          "obj_name": "test",
                          "mtime": "2024-03-13T14:31:46+08:00",
                          "deleted": false,
                          "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "user_name": "Seafile",
                          "user_contact_email": "Seafile@example.com"
                      },
                      {
                          "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                          "repo_name": "test",
                          "repo_encrypted": false,
                          "is_dir": true,
                          "path": "/list/",
                          "obj_name": "list",
                          "mtime": "",
                          "deleted": true,
                          "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "user_name": "Seafile",
                          "user_contact_email": "Seafile@example.com"
                      },
                      {
                          "repo_id": "5a2dc505-a880-44ed-9184-67697857869a",
                          "repo_name": "My Library",
                          "repo_encrypted": false,
                          "is_dir": false,
                          "path": "/test.md",
                          "obj_name": "test.md",
                          "mtime": "2024-03-18T16:41:17+08:00",
                          "deleted": false,
                          "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                          "user_name": "Seafile",
                          "user_contact_email": "Seafile@example.com"
                      }
                  ]
                 }

    post:
      tags:
        - Starred items
      summary: Star a library/folder/file
      description: Star existing libraries/folders/files for the current user.
      security:
        - AccountTokenAuth: []
      requestBody:
        content:
          application/json: 
            schema: 
              type: object
              properties:
                repo_id: 
                  $ref: '#/components/schemas/repo_id'
                path: 
                  $ref: '#/components/schemas/path'       
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                description: Starred item info
                properties:
                  repo_id: 
                    type: string
                  repo_name: 
                    type: string
                  repo_encrypted: 
                    type: boolean
                  is_dir: 
                    type: boolean
                  path: 
                    type: string
                  obj_name: 
                    type: string
                  mtime: 
                    type: string
                  deleted: 
                    type: boolean
                  user_email: 
                    type: string
                  user_name: 
                    type: string
                  user_contact_email: 
                    type: string
                example: {
                  "repo_id": "51a583ab-96f5-4d37-8208-51ebef7f1b24",
                  "repo_name": "rename_test",
                  "repo_encrypted": false,
                  "is_dir": true,
                  "path": "/star/",
                  "obj_name": "star",
                  "mtime": "2024-03-18T16:58:24+08:00",
                  "deleted": false,
                  "user_email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                  "user_name": "Seafile",
                  "user_contact_email": "Seafile@example.com"
                 }
    
    delete: 
      tags:
          - Starred items
      summary: Unstar a library/folder/file
      description: Cancel starred libraries/files/folders.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id_query'
        - $ref: '#/components/parameters/path_in_query_true' 
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

      
  /api2/repos/{repo_id}/user-folder-perm/:
    get: 
      tags:
        - Sub folder permissions
      summary: Get user folder permission
      description: Returns user permission information for the specified folder.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/folder_path'
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: array
                items: 
                  type: object
                  description: User permission info 
                  properties:
                    repo_id: 
                      type: string
                    user_email: 
                      type: string
                    user_name: 
                      type: string
                    folder_path: 
                      type: string
                    folder_name: 
                      type: string
                    permission: 
                      type: string

                  example: {
                    "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                    "user_email": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                    "user_name": "Seafile",
                    "folder_path": "/test",
                    "folder_name": "test",
                    "permission": "rw"
                     }
  
    post: 
      tags:
        - Sub folder permissions
      summary: Set user folder permission
      description: Adding user folder permissions allows other users to have specified permissions on the folder.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody: 
        content:
          multipart/form-data:
            schema: 
              type: object
              properties:
                folder_path: 
                  $ref: '#/components/schemas/folder_path'
                user_email: 
                  $ref: '#/components/schemas/user_email'
                permission: 
                  $ref: '#/components/schemas/permission'
              required: 
                - folder_path
                - user_email
                - permission        
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  failed: 
                    type: array
                    description: Failure reason
                    items: 
                      type: object
                      properties:
                        error_msg:
                          type: string
                        user_email: 
                          type: string
                  success: 
                    type: array
                    description: Successful information
                    items: 
                      type: object
                      description: User folder permission info
                      properties:
                        repo_id: 
                          type: string
                        folder_path: 
                          type: string
                        permission: 
                          type: string
                        folder_name: 
                          type: string
                        user_name: 
                          type: string
                        user_email: 
                          type: string
                example: {
                      "failed": [
                          {
                              "error_msg": "Permission already exists.",
                              "user_email": "Seafile@example.com"
                          }
                      ],
                      "success": [
                          {
                              "repo_id": "bdf816e6-aba8-468c-962f-77c2fcfd1d1c",
                              "folder_path": "/123",
                              "permission": "rw",
                              "folder_name": "123",
                              "user_name": "daniel",
                              "user_email": "daniel@example.com"
                          }
                      ]
                  }

    put: 
      tags:
        - Sub folder permissions
      summary: Modify user folder permission
      description: Modify existing user folder permissions, return user folder permission information.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody: 
        content:
          application/json:
            schema: 
              type: object
              properties:
                folder_path: 
                  $ref: '#/components/schemas/folder_path'
                user_email: 
                  $ref: '#/components/schemas/user_email'
                permission: 
                  $ref: '#/components/schemas/permission'
              required: 
                - folder_path
                - user_email
                - permission        
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                description: User folder permission info
                properties:
                  repo_id: 
                    type: string
                  folder_path: 
                    type: string
                  permission: 
                    type: string
                  folder_name: 
                    type: string
                  user_name: 
                    type: string
                  user_email: 
                    type: string
                example: {
                  "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                  "user_email": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                  "user_name": "Seafile",
                  "folder_path": "/test",
                  "folder_name": "test",
                  "permission": "rw"
                    }

    delete: 
      tags:
        - Sub folder permissions
      summary: Delete user folder permission
      description: Delete existing user folder permissions.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody: 
        content:
          application/json:
            schema: 
              type: object
              properties:
                folder_path: 
                  $ref: '#/components/schemas/folder_path'
                user_email: 
                  $ref: '#/components/schemas/user_email'
              required: 
                - folder_path
                - user_email     
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

  /api2/repos/{repo_id}/group-folder-perm/:
    get: 
      tags:
        - Sub folder permissions
      summary: Get group folder permission
      description: Returns group permission information for the specified folder.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/folder_path'
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: array
                items: 
                  type: object
                  description: Group folder permission info
                  properties:
                    repo_id: 
                      type: string
                    group_id: 
                      type: integer
                    group_name: 
                      type: string
                    folder_path: 
                      type: string
                    folder_name: 
                      type: string
                    permission: 
                      type: string
                example: [
                    {
                        "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                        "group_id": 3493,
                        "group_name": "group-t",
                        "folder_path": "/test",
                        "folder_name": "test",
                        "permission": "rw"
                    }
                  ]
  
    post: 
      tags:
        - Sub folder permissions
      summary: Set group folder permission
      description: Adding group folder permissions allows other group to have specified permissions on the folder.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody: 
        content:
          multipart/form-data:
            schema: 
              type: object
              properties:
                folder_path: 
                  $ref: '#/components/schemas/folder_path'
                group_id: 
                  $ref: '#/components/schemas/group_id'
                permission: 
                  $ref: '#/components/schemas/permission'
              required: 
                - folder_path
                - group_id
                - permission        
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  failed: 
                    type: array
                    description: Failure reason
                    items: 
                      type: object
                      properties:
                        error_msg:
                          type: string
                        group_id: 
                          type: string
                  success: 
                    type: array
                    description: Successful information
                    items: 
                      type: object
                      description: Group folder permission info
                      properties:
                        repo_id: 
                          type: string
                        folder_path: 
                          type: string
                        permission: 
                          type: string
                        folder_name: 
                          type: string
                        group_name: 
                          type: string
                        group_id: 
                          type: integer
                example: {
                  "failed": [
                      {
                          "group_id": 65,
                          "error_msg": "Permission already exists."
                      }
                  ],
                  "success": [
                      {
                          "repo_id": "bdf816e6-aba8-468c-962f-77c2fcfd1d1c",
                          "folder_path": "/folder",
                          "permission": "rw",
                          "group_name": "group-2",
                          "folder_name": "folder",
                          "group_id": 586
                      }
                  ]
                }

    put: 
      tags:
        - Sub folder permissions
      summary: Modify group folder permission
      description: Modify existing group folder permissions, return group folder permission information.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody: 
        content:
          application/json:
            schema: 
              type: object
              properties:
                folder_path: 
                  $ref: '#/components/schemas/folder_path'
                group_id: 
                  $ref: '#/components/schemas/group_id'
                permission: 
                  $ref: '#/components/schemas/permission'
              required: 
                - folder_path
                - group_id
                - permission        
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                description: Group folder permission info
                properties:
                  repo_id: 
                    type: string
                  folder_path: 
                    type: string
                  permission: 
                    type: string
                  folder_name: 
                    type: string
                  group_id: 
                    type: integer
                  group_name: 
                    type: string
                example: {
                      "repo_id": "4e6ff511-deb2-4373-8377-c0ce247e6387",
                      "group_id": 3479,
                      "group_name": "new_group",
                      "folder_path": "/folder",
                      "folder_name": "folder",
                      "permission": "r"
                  }

    delete: 
      tags:
        - Sub folder permissions
      summary: Delete group folder permission
      description: Delete existing group folder permissions.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody: 
        content:
          application/json:
            schema: 
              type: object
              properties:
                folder_path: 
                  $ref: '#/components/schemas/folder_path'
                group_id: 
                  $ref: '#/components/schemas/group_id'
              required: 
                - folder_path
                - group_id     
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state


  /api2/beshared-repos/{repo_id}/:
    delete:
      tags:
        - Share to user/group
      summary: Delete a library shared to me (leave the share)
      description: Delete the library shared with the current user.
      security:
        - AccountTokenAuth: []
      parameters:
          - $ref: '#/components/parameters/repo_id'
          - $ref: '#/components/parameters/from'
          - $ref: '#/components/parameters/share_type_all'
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state 
 
  /api2/beshared-repos/: 
    get: 
      tags:
        - List share
      summary: List libraries shared to me
      description: Return detailed information on libraries shared by other users with the current user.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json: 
              schema: 
                type: array
                items: 
                  type: object
                  description: Library info 
                  properties:
                    id: 
                      type: string
                    name: 
                      type: string
                    desc: 
                      type: string
                    version: 
                      type: integer
                    last_modify: 
                      type: number
                    size: 
                      type: integer
                    file_count: 
                      type: integer
                    last_modifier: 
                      type: string
                    head_cmmt_id: 
                      type: string
                    root: 
                      type: string
                    status: 
                      type: integer
                    repo_id: 
                      type: string
                    repo_name: 
                      type: string
                    repo_desc: 
                      type: string
                    last_modified: 
                      type: number
                    encrypted: 
                      type: boolean
                    magic: 
                      type: string
                    enc_version: 
                      type: integer
                    random_key: 
                      type: string
                    salt: 
                      type: string
                    worktree: 
                      type: string
                    relay_id: 
                      type: string
                    last_sync_time: 
                      type: integer
                    auto_sync: 
                      type: boolean
                    worktree_invalid: 
                      type: boolean
                    is_virtual: 
                      type: boolean
                    origin_repo_id: 
                      type: string
                    origin_repo_name: 
                      type: string
                    origin_path: 
                      type: string
                    is_original_owner: 
                      type: boolean
                    virtual_perm: 
                      type: string
                    store_id: 
                      type: string
                    is_corrupted: 
                      type: boolean
                    repaired: 
                      type: boolean
                    share_type: 
                      type: string
                    permission: 
                      type: string
                    user: 
                      type: string
                    group_id: 
                      type: integer
                    group_name: 
                      type: string
                    is_shared: 
                      type: boolean
                    storage_id: 
                      type: string
                    storage_name: 
                      type: string
                example: [
                  {
                      "id": "4f0881c3-b1c7-4ff2-8b10-b0f519fabf68",
                      "name": "test",
                      "desc": null,
                      "version": 1,
                      "last_modify": 1709609146,
                      "size": 0,
                      "file_count": 0,
                      "last_modifier": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                      "head_cmmt_id": "ed12805e4b2ec1f9d4c3319576ea96d6af607d1f",
                      "root": null,
                      "status": 0,
                      "repo_id": "4f0881c3-b1c7-4ff2-8b10-b0f519fabf68",
                      "repo_name": "test",
                      "repo_desc": null,
                      "last_modified": 1709609146,
                      "encrypted": false,
                      "magic": null,
                      "enc_version": 0,
                      "random_key": null,
                      "salt": null,
                      "worktree": null,
                      "relay_id": null,
                      "last_sync_time": 0,
                      "auto_sync": false,
                      "worktree_invalid": false,
                      "is_virtual": false,
                      "origin_repo_id": null,
                      "origin_repo_name": null,
                      "origin_path": null,
                      "is_original_owner": false,
                      "virtual_perm": null,
                      "store_id": "4f0881c3-b1c7-4ff2-8b10-b0f519fabf68",
                      "is_corrupted": false,
                      "repaired": false,
                      "share_type": "personal",
                      "permission": "rw",
                      "user": "62e7d27c7d4f42d8afcc35e2002b812c@auth.local",
                      "group_id": 0,
                      "group_name": null,
                      "is_shared": false,
                      "storage_id": null,
                      "storage_name": null
                  }
                  ]

  /api2/repos/public/: 
    post:
      tags:
        - Shared-with-all libraries
      summary: Create shared-with-all library.
      description: Return the shared information of the current user.
      security:
        - AccountTokenAuth: []
      requestBody: 
        content:
          application/json: 
            schema: 
              type: object
              properties:
                name: 
                  $ref: '#/components/schemas/library_name'
                permission: 
                  $ref: '#/components/schemas/permission'
                passwd: 
                  $ref: '#/components/schemas/password'
              required:
                - name
                - permission
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                description: Library info
                properties:
                  id: 
                    type: string
                  name: 
                    type: string
                  desc: 
                    type: string
                  size: 
                    type: integer
                  size_formatted: 
                    type: string
                  mtime: 
                    type: number
                  mtime_relative: 
                    type: string
                  encrypted: 
                    type: boolean
                  permission: 
                    type: string
                  owner: 
                    type: string
                  owner_nickname: 
                    type: string
                  owner_name: 
                    type: string
                example: {
                  "id": "daadb5e9-e9e2-431c-847f-c90731d821c6",
                  "name": "test-public-repo",
                  "desc": "",
                  "size": 0,
                  "size_formatted": "0 bytes",
                  "mtime": 1710986989,
                  "mtime_relative": "<time datetime=\"2024-03-21T10:09:49\" is=\"relative-time\" title=\"Thu, 21 Mar 2024 10:09:49 +0800\" >1 second ago</time>",
                  "encrypted": false,
                  "permission": "r",
                  "owner": "admin@seafile.com",
                  "owner_nickname": "Teamfile",
                  "owner_name": "Teamfile"
                 }

  /api/v2.1/shared-repos/{repo_id}/: 
    put: 
      tags:
        - Shared-with-all libraries
      summary: Share existing library as shared-with-all
      description: Share existing libraries with everyone.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
      requestBody: 
        content:
          application/json: 
            schema: 
              type: object
              properties:
                share_type: 
                  $ref: '#/components/schemas/share_type'
                permission: 
                  $ref: '#/components/schemas/permission'
              required:
                - share_type
                - permission
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

    delete: 
      tags:
        - Shared-with-all libraries
      summary: Remove library from shared-with-all
      description: Remove library from shared-with-all.After removal, only oneself is visible.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/share_type'
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

  /api/v2.1/repos/batch/: 
    post:
      tags:
        - Share batch operation
      summary: Batch share libraries to user/group
      description: Batch sharing existing libraries with user/group.
      security:
        - AccountTokenAuth: []
      requestBody: 
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/share_operation_batch'
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  failed: 
                    type: array
                    items: 
                      type: object
                      properties:
                        repo_id: 
                          type: string
                        error_msg:
                          type: string
                  success: 
                    type: array
                    items: 
                      type: object
                      description: Successful info
                      properties:
                        repo_id: 
                          type: string
                        username: 
                          type: string
                        permission: 
                          type: string
              examples: 
                User: 
                  value: {
                    "failed": [
                        {
                            "repo_id": "d5620899-1e9b-4a8c-b9af-b00a26324407",
                            "error_msg": "Library d5620899-1e9b-4a8c-b9af-b00a26324407 not found."
                        }
                    ],
                    "success": [
                        {
                            "repo_id": "daadb5e9-e9e2-431c-847f-c90731d821c6",
                            "username": "0005926c7d894c7e91e163fd399529a5@auth.local",
                            "permission": "rw"
                        }
                    ]
                      }
                Group: 
                  value: {
                    "failed": [
                        {"repo_id": "f820bd12-0511-4542-b14b-3e48d8efc294", "error_msg": "This item has been shared to group-of-lian."}
                    ],
                    "success": [
                        {"permission": "rw", "repo_id": "3761ade3-100b-4c3b-9508-79b3a510e6f6", "group_id": 65, "group_name": "group-of-lian"}
                    ]
                        }

  /api2/repos/{repo_id}/dir/shared_items/p={path}:
    put: 
      tags:
        - Share folder
      summary: Share a folder
      description: |-
        Share folders with other users and groups.
        - username, necessary if share_type is user
        - group_id, necessary if share_type is group
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/path'
      requestBody: 
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                share_type: 
                  $ref: '#/components/schemas/share_type_library'
                permission: 
                  $ref: '#/components/schemas/permission'
                username:
                  $ref: '#/components/schemas/username'
                group_id: 
                  $ref: '#/components/schemas/group_id'
              required:
                - share_type
                - permission
      responses:
        '200':
          description: OK       
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  failed: 
                    type: array
                    items: 
                      type: object
                  user_info: 
                    type: object
                    properties:
                      name: 
                        type: string
                      nickname: 
                        type: string
                      contact_email:
                        type: string
                      avatar_url:
                        type: string
                  permission: 
                    type: string
                  is_admin: 
                    type: boolean
                example: {
                    "failed": [],
                    "success": [
                        {
                            "share_type": "user",
                            "user_info": {
                                "name": "0005926c7d894c7e91e163fd399529a5@auth.local",
                                "nickname": "20240320",
                                "contact_email": "20240320@qq.com",
                                "avatar_url": "https://demo.seafile.top/media/avatars/default.png"
                            },
                            "permission": "rw",
                            "is_admin": false
                        }
                    ]
                     }

  /api/v2.1/shared-folders/:
    get: 
      tags:
        - Share folder
      summary: List shared folders
      description: Return all shared folder information.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: array
                items: 
                  type: object
                  description: Shared info
                  properties:
                    repo_id: 
                      type: string
                    repo_name: 
                      type: string
                    path: 
                      type: string
                    folder_name: 
                      type: string
                    share_type: 
                      type: string
                    share_permission: 
                      type: string
                    share_permission_name: 
                      type: string
                    user_name: 
                      type: string
                    user_email: 
                      type: string
                    contact_email: 
                      type: string
                example: [
                      {
                          "repo_id": "daadb5e9-e9e2-431c-847f-c90731d821c6",
                          "repo_name": "test-public-repo",
                          "path": "/folder",
                          "folder_name": "folder",
                          "share_type": "personal",
                          "share_permission": "rw",
                          "share_permission_name": "",
                          "user_name": "llin",
                          "user_email": "Seafile@example.com",
                          "contact_email": "Seafile@example.com"
                      },
                      {
                          "repo_id": "daadb5e9-e9e2-431c-847f-c90731d821c6",
                          "repo_name": "test-public-repo",
                          "path": "/t",
                          "folder_name": "t",
                          "share_type": "personal",
                          "share_permission": "rw",
                          "share_permission_name": "",
                          "user_name": "20240320",
                          "user_email": "0005926c7d894c7e91e163fd399529a5@auth.local",
                          "contact_email": "daniel@example.com"
                      }
                  ]

  /api2/repos/{repo_id}/dir/shared_items/?p={path}:
    post: 
      tags:
        - Share folder
      summary: Update folder share permission
      description: |-
        Update shared folder permissions.
        - username, necessary if share_type is user
        - group_id, necessary if share_type is group
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/share_type_library'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/group_id_query'
      requestBody: 
        content:
          application/json: 
            schema: 
              type: object
              properties:
                permission: 
                  type: string
                  description: "`r` or `rw`"
                  example: r
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

    delete: 
      tags:
        - Share folder
      summary: Remove the specified shared folder
      description: |-
        - username, necessary if share_type is user
        - group_id, necessary if share_type is group
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/repo_id'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/share_type_library'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/group_id_query'
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

  /api/v2.1/upload-links/:
    get: 
      tags:
        - Upload links
      summary: List upload links
      description: |-
        Return all upload link information.
        *Note:The token in the return message can be used to delete the upload link*
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK       
          content:
            application/json: 
              schema: 
                type: array
                items: 
                  type: object
                  description: Upload link info
                  properties:
                    repo_id: 
                      type: string
                    repo_name: 
                      type: string
                    path: 
                      type: string
                    obj_name: 
                      type: string
                    obj_id: 
                      type: string
                    view_cnt: 
                      type: string
                    ctime: 
                      type: string
                    link: 
                      type: string
                    token: 
                      type: string
                    username: 
                      type: string
                    expire_date: 
                      type: string
                    is_expired: 
                      type: boolean
                    password: 
                      type: string
                example: [
                    {
                        "repo_id": "c1d658ca-9570-46f3-b055-452cbbf0a1fb",
                        "repo_name": "test",
                        "path": "/",
                        "obj_name": "/",
                        "obj_id": "b3429a425dfc03c339288d364b98ee0ab4e831d1",
                        "view_cnt": 1,
                        "ctime": "2024-03-07T09:53:57+08:00",
                        "link": "https://cloud.seafile.com/u/d/b5bbd0b8cee24af69096/",
                        "token": "b5bbd0b8cee24af69096",
                        "username": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "expire_date": "",
                        "is_expired": false,
                        "password": ""
                    },
                    {
                        "repo_id": "6e7e9041-a2ac-4522-bd98-15176a8ba789",
                        "repo_name": "t",
                        "path": "/",
                        "obj_name": "/",
                        "obj_id": "0000000000000000000000000000000000000000",
                        "view_cnt": 0,
                        "ctime": "2024-03-16T11:17:24+08:00",
                        "link": "https://cloud.seafile.com/u/d/088db159adca494aa999/",
                        "token": "088db159adca494aa999",
                        "username": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "expire_date": "",
                        "is_expired": false,
                        "password": ""
                    },
                    {
                        "repo_id": "d5620899-1e9b-4a8c-b9af-b00a26324407",
                        "repo_name": "reply",
                        "path": "/",
                        "obj_name": "/",
                        "obj_id": "446edd88ea00a959c8c3727b98258074391c4ef3",
                        "view_cnt": 0,
                        "ctime": "2024-03-20T09:52:42+08:00",
                        "link": "https://cloud.seafile.com/u/d/1461e428de7b4038807a/",
                        "token": "1461e428de7b4038807a",
                        "username": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                        "expire_date": "",
                        "is_expired": false,
                        "password": ""
                    }
                ]
      
    post:
      tags:
        - Upload links
      summary: Create upload link
      description: |-
        Create a shared upload link for an existing folder, return the upload link information.
        *Note:The token in the return message can be used to delete the upload link*
      security:
        - AccountTokenAuth: []
      requestBody: 
        content:
          application/json: 
            schema: 
              type: object
              properties:
                repo_id: 
                  $ref: '#/components/schemas/repo_id'
                path: 
                  $ref: '#/components/schemas/path'
                password: 
                  $ref: '#/components/schemas/password'
              required:
                - repo_id
                - path
      responses:
        '200':
          description: OK    
          content:
            application/json: 
              schema: 
                type: object
                description: Upload link info
                properties:
                  repo_id: 
                    type: string
                  repo_name: 
                    type: string
                  path: 
                    type: string
                  obj_name: 
                    type: string
                  obj_id: 
                    type: string
                  view_cnt: 
                    type: string
                  ctime: 
                    type: string
                  link: 
                    type: string
                  token: 
                    type: string
                  username: 
                    type: string
                  expire_date: 
                    type: string
                  is_expired: 
                    type: boolean
                  password: 
                    type: string
                example: {
                  "repo_id": "c2c06888-6ae2-4457-8b2b-4402a2040a25",
                  "repo_name": "Seafile",
                  "path": "/folder",
                  "obj_name": "folder",
                  "obj_id": "0000000000000000000000000000000000000000",
                  "view_cnt": 0,
                  "ctime": "2024-03-20T10:10:29+08:00",
                  "link": "https://cloud.seafile.com/u/d/49fb2ebd23f04f4882fb/",
                  "token": "49fb2ebd23f04f4882fb",
                  "username": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                  "expire_date": "",
                  "is_expired": false,
                  "password": ""
                 }

  /api/v2.1/upload-links/{token}/: 
    delete: 
      tags:
        - Upload links
      summary: Delete upload links
      description: Delete the specified shared upload link.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/upload_link_token'
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  success: 
                    type: boolean
                    description: Success state

  /api2/send-upload-link/: 
    post: 
      tags:
        - Upload links
      summary: Send upload link email
      description: Send the existing shared upload link of the current user to other users.
      security:
        - AccountTokenAuth: []
      requestBody: 
        content:
          multipart/form-data:
            schema: 
              type: object
              properties:
                token: 
                  $ref: '#/components/schemas/token'
                email: 
                  $ref: '#/components/schemas/user_email'
                extra_msg:
                  $ref: '#/components/schemas/extra_msg'
              required:
                - token
                - email
      responses:
        '200':
          description: OK 
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  failed: 
                    type: array
                    items: 
                      type: object
                      description: Error message
                      properties:
                        email: 
                          type: string
                        error_msg: 
                          type: string
                  success: 
                    type: array
                    description: User email
                    items:
                      type: string
                example: {
                  "failed": [
                      {
                          "email": "invalid-email",
                          "error_msg": "email invalid."
                      }
                  ],
                  "success": [
                      "sample@eamil.com"
                  ]
                 }

  /api/v2.1/upload-links/{token}/upload/: 
    get:
      tags:
          - Upload links
      summary: Get shared upload link
      description: |-
        Return an upload link.
        *After get upload link, you can upload file to the shared dir, for more info, please see Upload File.*
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/upload_link_token'
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  upload_link: 
                    description: Upload link
                    type: string
                example: {
                    "upload_link": "https://cloud.seafile.com/seafhttp/upload-api/70d7b2eb-5a8e-448c-bf08-a8edde506e20"
                }

  /api/v2.1/user/: 
    get: 
      tags:
        - User profile
      summary: Get user profile
      description: Gets the current user's profile.
      security:
        - AccountTokenAuth: []
      responses:
        '200':
          description: OK  
          content:
            application/json:
              schema: 
                type: object
                description: User's profile
                properties:
                  email: 
                    type: string
                  name: 
                    type: string
                  contact_email: 
                    type: string
                  telephone: 
                    type: string
                  login_id: 
                    type: string
                  list_in_address_book: 
                    type: boolean
                example: {
                  "email": "77a423e4804a4d7ca1ec78a150d71229@auth.local",
                  "name": "Seafile",
                  "contact_email": "Seafile@example.com",
                  "telephone": "",
                  "login_id": null,
                  "list_in_address_book": false
                 }

    put: 
      tags:
        - User profile
      summary: Update user profile
      description: |-
        Update the current user's profile.
        - If you want to use this api, you must set `ENABLE_UPDATE_USER_INFO` to `True` in `../conf/seahub_settings.py`, for more info please see this manual.
        - If you want to change contact email, you must set `ENABLE_USER_SET_CONTACT_EMAIL` to `True` in `../conf/seahub_settings.py.`
      security:
        - AccountTokenAuth: []
      requestBody: 
          content:
            application/json: 
              schema: 
                type: object
                properties: 
                  name: 
                    $ref: '#/components/schemas/user_profile_name'
                  telephone: 
                    $ref: '#/components/schemas/telephone'
                  contact_email: 
                    $ref: '#/components/schemas/contact_email'
                  list_in_address_book: 
                    $ref: '#/components/schemas/list_in_address_book'          
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                description: User info
                properties:
                  email: 
                    type: string
                  name: 
                    type: string
                  contact_email: 
                    type: string
                  telephone: 
                    type: string
                  login_id: 
                    type: string
                  list_in_address_book: 
                    type: boolean
                example: {
                  "email": "9b4393c623c74243b0ad43709701687d@auth.local",
                  "name": "Seafile",
                  "contact_email": "Seafile@qq.com",
                  "telephone": "",
                  "login_id": null,
                  "list_in_address_book": false
                    }

  /api2/search-user/: 
    get: 
      tags:
        - User search
      summary: Search user
      description: Search users by keyword.
      security:
        - AccountTokenAuth: []
      parameters:
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: OK  
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  users: 
                    type: array
                    items: 
                      type: object
                      description: user info
                      properties:
                        email: 
                          type: string
                        avatar_url: 
                          type: string
                        name: 
                          type: string
                        contact_email:
                          type: string
                example: {
                  "users": [
                      {
                          "email": "foo@foo.com",
                          "avatar_url": "https://dev.seafile.com/seahub/image-view/avatars/3/7/17483f26171b61a4e2154fb37ffbd1/resized/32/1251f6b24ca35ffa689cce8dd731f256.png",
                          "name": "foo",
                          "contact_email": "foo@foo.com"
                      }
                  ]
                 }
